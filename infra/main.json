{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "11334890965927261769"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "The name of the environment (dev, test, prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The primary Azure region for deployment"
      }
    },
    "resourceToken": {
      "type": "string",
      "defaultValue": "[toLower(uniqueString(subscription().id, resourceGroup().id, parameters('location'), parameters('environmentName')))]",
      "metadata": {
        "description": "The resource token to make resource names unique"
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[tenant().tenantId]",
      "metadata": {
        "description": "The Azure Entra ID tenant ID"
      }
    },
    "adminGroupObjectId": {
      "type": "string",
      "metadata": {
        "description": "The object ID of the Azure Entra ID group for administrators"
      }
    }
  },
  "variables": {
    "abbrs": {
      "cosmosDBAccounts": "cosmos-",
      "staticSites": "stapp-",
      "managedIdentity": "id-",
      "keyVault": "kv-",
      "logAnalyticsWorkspace": "log-",
      "applicationInsights": "appi-"
    },
    "resourceNames": {
      "cosmosAccount": "[format('{0}{1}', variables('abbrs').cosmosDBAccounts, parameters('resourceToken'))]",
      "staticWebApp": "[format('{0}{1}', variables('abbrs').staticSites, parameters('resourceToken'))]",
      "managedIdentity": "[format('{0}{1}', variables('abbrs').managedIdentity, parameters('resourceToken'))]",
      "keyVault": "[format('{0}{1}', variables('abbrs').keyVault, parameters('resourceToken'))]",
      "logAnalytics": "[format('{0}{1}', variables('abbrs').logAnalyticsWorkspace, parameters('resourceToken'))]",
      "appInsights": "[format('{0}{1}', variables('abbrs').applicationInsights, parameters('resourceToken'))]"
    },
    "tags": {
      "azd-env-name": "[parameters('environmentName')]",
      "project": "cato-dashboard",
      "environment": "[parameters('environmentName')]",
      "cost-center": "security-operations",
      "data-classification": "cui"
    }
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[variables('resourceNames').managedIdentity]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('resourceNames').keyVault]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "tenantId": "[parameters('tenantId')]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "enabledForDeployment": false,
        "enabledForTemplateDeployment": false,
        "enabledForDiskEncryption": false,
        "enableRbacAuthorization": true,
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Deny",
          "ipRules": []
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('resourceNames').logAnalytics]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 90,
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('resourceNames').appInsights]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceNames').logAnalytics)]",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceNames').logAnalytics)]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-11-15",
      "name": "[variables('resourceNames').cosmosAccount]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "GlobalDocumentDB",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "databaseAccountOfferType": "Standard",
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "disableKeyBasedMetadataWriteAccess": true,
        "publicNetworkAccess": "Enabled",
        "networkAclBypass": "AzureServices",
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ],
        "backupPolicy": {
          "type": "Periodic",
          "periodicModeProperties": {
            "backupIntervalInMinutes": 240,
            "backupRetentionIntervalInHours": 8,
            "backupStorageRedundancy": "Local"
          }
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2023-11-15",
      "name": "[format('{0}/{1}', variables('resourceNames').cosmosAccount, 'cato-dashboard')]",
      "properties": {
        "resource": {
          "id": "cato-dashboard"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('resourceNames').cosmosAccount)]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-11-15",
      "name": "[format('{0}/{1}/{2}', variables('resourceNames').cosmosAccount, 'cato-dashboard', 'nist-controls')]",
      "properties": {
        "resource": {
          "id": "nist-controls",
          "partitionKey": {
            "paths": [
              "/controlFamily"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/controlFamily/?"
              },
              {
                "path": "/status/?"
              },
              {
                "path": "/riskLevel/?"
              },
              {
                "path": "/lastAssessed/?"
              }
            ],
            "excludedPaths": [
              {
                "path": "/*"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('resourceNames').cosmosAccount, 'cato-dashboard')]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-11-15",
      "name": "[format('{0}/{1}/{2}', variables('resourceNames').cosmosAccount, 'cato-dashboard', 'zta-activities')]",
      "properties": {
        "resource": {
          "id": "zta-activities",
          "partitionKey": {
            "paths": [
              "/pillar"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/pillar/?"
              },
              {
                "path": "/status/?"
              },
              {
                "path": "/phaseLevel/?"
              },
              {
                "path": "/maturity/?"
              }
            ],
            "excludedPaths": [
              {
                "path": "/*"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('resourceNames').cosmosAccount, 'cato-dashboard')]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-11-15",
      "name": "[format('{0}/{1}/{2}', variables('resourceNames').cosmosAccount, 'cato-dashboard', 'poam-items')]",
      "properties": {
        "resource": {
          "id": "poam-items",
          "partitionKey": {
            "paths": [
              "/riskLevel"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/status/?"
              },
              {
                "path": "/riskLevel/?"
              },
              {
                "path": "/assignee/?"
              },
              {
                "path": "/dueDate/?"
              }
            ],
            "excludedPaths": [
              {
                "path": "/*"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('resourceNames').cosmosAccount, 'cato-dashboard')]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-11-15",
      "name": "[format('{0}/{1}/{2}', variables('resourceNames').cosmosAccount, 'cato-dashboard', 'control-history')]",
      "properties": {
        "resource": {
          "id": "control-history",
          "partitionKey": {
            "paths": [
              "/controlId"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/controlId/?"
              },
              {
                "path": "/changeDate/?"
              },
              {
                "path": "/eventSource/?"
              }
            ],
            "excludedPaths": [
              {
                "path": "/*"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('resourceNames').cosmosAccount, 'cato-dashboard')]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-11-15",
      "name": "[format('{0}/{1}/{2}', variables('resourceNames').cosmosAccount, 'cato-dashboard', 'vulnerabilities')]",
      "properties": {
        "resource": {
          "id": "vulnerabilities",
          "partitionKey": {
            "paths": [
              "/severity"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/severity/?"
              },
              {
                "path": "/status/?"
              },
              {
                "path": "/discoveryDate/?"
              }
            ],
            "excludedPaths": [
              {
                "path": "/*"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('resourceNames').cosmosAccount, 'cato-dashboard')]"
      ]
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2024-04-01",
      "name": "[variables('resourceNames').staticWebApp]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity))]": {}
        }
      },
      "properties": {
        "buildProperties": {
          "skipGithubActionWorkflowGeneration": true,
          "appLocation": ".",
          "outputLocation": "dist"
        },
        "stagingEnvironmentPolicy": "Enabled",
        "allowConfigFileUpdates": true,
        "enterpriseGradeCdnStatus": "Enabled",
        "publicNetworkAccess": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity)]"
      ]
    },
    {
      "type": "Microsoft.Web/staticSites/config",
      "apiVersion": "2024-04-01",
      "name": "[format('{0}/{1}', variables('resourceNames').staticWebApp, 'appsettings')]",
      "properties": {
        "AZURE_COSMOS_ENDPOINT": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('resourceNames').cosmosAccount), '2023-11-15').documentEndpoint]",
        "AZURE_COSMOS_DATABASE_NAME": "cato-dashboard",
        "AZURE_KEY_VAULT_ENDPOINT": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('resourceNames').keyVault), '2023-07-01').vaultUri]",
        "AZURE_MANAGED_IDENTITY_CLIENT_ID": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity), '2023-01-31').clientId]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('Microsoft.Insights/components', variables('resourceNames').appInsights), '2020-02-02').ConnectionString]",
        "AZURE_LOG_ANALYTICS_WORKSPACE_ID": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceNames').logAnalytics), '2022-10-01').customerId]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('resourceNames').appInsights)]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('resourceNames').cosmosAccount)]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('resourceNames').cosmosAccount, 'cato-dashboard')]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('resourceNames').keyVault)]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceNames').logAnalytics)]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity)]",
        "[resourceId('Microsoft.Web/staticSites', variables('resourceNames').staticWebApp)]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.DocumentDB/databaseAccounts/{0}', variables('resourceNames').cosmosAccount)]",
      "name": "[guid(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('resourceNames').cosmosAccount), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity), 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('resourceNames').cosmosAccount)]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity)]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('resourceNames').keyVault)]",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('resourceNames').keyVault), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity), '4633458b-17de-408a-b874-0445c86b69e6')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('resourceNames').keyVault)]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity)]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', variables('resourceNames').logAnalytics)]",
      "name": "[guid(resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceNames').logAnalytics), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity), '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceNames').logAnalytics)]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity)]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('resourceNames').keyVault)]",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('resourceNames').keyVault), parameters('adminGroupObjectId'), '00482a5a-887f-4fb3-b363-3b7fe8e74483')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]",
        "principalId": "[parameters('adminGroupObjectId')]",
        "principalType": "Group"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('resourceNames').keyVault)]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('resourceNames').keyVault, 'cosmos-connection-string')]",
      "properties": {
        "value": "[format('AccountEndpoint={0};AccountKey={1};', reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('resourceNames').cosmosAccount), '2023-11-15').documentEndpoint, listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('resourceNames').cosmosAccount), '2023-11-15').primaryMasterKey)]",
        "contentType": "text/plain"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('resourceNames').cosmosAccount)]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('resourceNames').keyVault)]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('resourceNames').keyVault, 'appinsights-connection-string')]",
      "properties": {
        "value": "[reference(resourceId('Microsoft.Insights/components', variables('resourceNames').appInsights), '2020-02-02').ConnectionString]",
        "contentType": "text/plain"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('resourceNames').appInsights)]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('resourceNames').keyVault)]"
      ]
    }
  ],
  "outputs": {
    "RESOURCE_GROUP_ID": {
      "type": "string",
      "value": "[resourceGroup().id]"
    },
    "AZURE_COSMOS_ENDPOINT": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('resourceNames').cosmosAccount), '2023-11-15').documentEndpoint]"
    },
    "AZURE_COSMOS_DATABASE_NAME": {
      "type": "string",
      "value": "cato-dashboard"
    },
    "AZURE_KEY_VAULT_ENDPOINT": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('resourceNames').keyVault), '2023-07-01').vaultUri]"
    },
    "AZURE_MANAGED_IDENTITY_CLIENT_ID": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').managedIdentity), '2023-01-31').clientId]"
    },
    "AZURE_STATIC_WEB_APP_NAME": {
      "type": "string",
      "value": "[variables('resourceNames').staticWebApp]"
    },
    "AZURE_STATIC_WEB_APP_HOSTNAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/staticSites', variables('resourceNames').staticWebApp), '2024-04-01').defaultHostname]"
    },
    "APPLICATIONINSIGHTS_CONNECTION_STRING": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('resourceNames').appInsights), '2020-02-02').ConnectionString]"
    },
    "AZURE_LOG_ANALYTICS_WORKSPACE_ID": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceNames').logAnalytics), '2022-10-01').customerId]"
    }
  }
}