/* Enhanced NIST control data based on comprehensive CSV with descriptions and Azure implementations */
import type { NISTControl } from '../services/cosmosService';

export const nistControlsFromCSV: NISTControl[] = [
  {
    id: 'AC-1',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate access control policies and procedures.',
    azureImplementation: 'This is a procedural control. The organization must develop a formal Access Control Policy. This policy should be stored in a version-controlled repository like Azure Repos, and its existence can be attested to using manual Azure Policy definitions (e.g., CMA_0144).',
    status: 'partial',
    implementation: 'Azure AD policies documented',
    lastAssessed: '2024-12-01',
    assessedBy: 'System Administrator',
    evidence: ['Policy document in Azure Repos', 'Manual Azure Policy attestation'],
    riskLevel: 'medium',
  },
  {
    id: 'AC-2',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-2',
    controlName: 'Account Management',
    description: 'Manage the lifecycle of system accounts (creation, modification, disabling, removal).',
    azureImplementation: 'Implement Microsoft Entra ID Governance. Use Lifecycle Workflows to automate Joiner-Mover-Leaver (JML) processes based on an HR system of record. Use Microsoft Entra Access Reviews to periodically recertify access to critical applications and privileged groups.',
    status: 'compliant',
    implementation: 'Automated via Azure AD with Lifecycle Workflows',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Analyst',
    evidence: ['Entra ID Governance configuration', 'Access review reports'],
    riskLevel: 'low',
  },
  {
    id: 'AC-3',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-3',
    controlName: 'Access Enforcement',
    description: 'Enforce approved authorizations for logical access to information and system resources.',
    azureImplementation: 'Implement Microsoft Entra Conditional Access policies to enforce access controls based on user, device, location, and risk signals. Use Azure Role-Based Access Control (RBAC) with the principle of least privilege for managing Azure resources.',
    status: 'partial',
    implementation: 'RBAC partially implemented, Conditional Access in progress',
    lastAssessed: '2024-11-15',
    assessedBy: 'Security Analyst',
    evidence: ['Conditional Access policies', 'RBAC assignments'],
    riskLevel: 'medium',
    poamItems: ['POAM-001'],
  },
  {
    id: 'AC-4',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-4',
    controlName: 'Information Flow Enforcement',
    description: 'Enforce approved authorizations for controlling the flow of information within and between systems.',
    azureImplementation: 'Implement a hub-spoke network topology with Azure Firewall in the hub for centralized traffic inspection. Use Network Security Groups (NSGs) for micro-segmentation between subnets. Secure PaaS services with Azure Private Link to prevent data exfiltration over the public internet.',
    status: 'noncompliant',
    implementation: 'Network segmentation needed',
    lastAssessed: '2024-10-01',
    assessedBy: 'Network Engineer',
    evidence: [],
    riskLevel: 'high',
    poamItems: ['POAM-002'],
  },
  {
    id: 'AC-5',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-5',
    controlName: 'Separation of Duties',
    description: 'Identify and document duties of individuals requiring separation and define system access authorizations to support this separation.',
    azureImplementation: 'Use custom Azure RBAC roles to separate conflicting duties (e.g., a "Developer" role cannot approve its own deployments). Use Azure Policy to audit for potential violations, such as a single user having both "Contributor" and "Security Admin" roles.',
    status: 'compliant',
    implementation: 'Privileged Identity Management with custom roles',
    lastAssessed: '2024-11-20',
    assessedBy: 'Compliance Officer',
    evidence: ['Custom RBAC roles', 'Azure Policy compliance reports'],
    riskLevel: 'low',
  },
  {
    id: 'AC-6',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-6',
    controlName: 'Least Privilege',
    description: 'Employ the principle of least privilege, allowing only necessary authorized accesses.',
    azureImplementation: 'Implement Microsoft Entra Privileged Identity Management (PIM) to provide just-in-time (JIT) access to privileged roles. Convert all standing privileged access to "eligible" assignments that require activation with MFA and justification.',
    status: 'compliant',
    implementation: 'PIM with JIT access implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Analyst',
    evidence: ['PIM configuration', 'JIT access reports'],
    riskLevel: 'low',
  },
  {
    id: 'AC-7',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-7',
    controlName: 'Unsuccessful Logon Attempts',
    description: 'Limit consecutive invalid logon attempts and take action when the limit is exceeded.',
    azureImplementation: 'Leverage the built-in Microsoft Entra ID Smart Lockout feature, which uses risk-based intelligence to lock out attackers while avoiding locking out legitimate users. For IaaS VMs, configure account lockout policies via Group Policy (Windows) or PAM (Linux).',
    status: 'compliant',
    implementation: 'Smart Lockout enabled',
    lastAssessed: '2024-11-15',
    assessedBy: 'Security Engineer',
    evidence: ['Smart Lockout configuration', 'VM lockout policies'],
    riskLevel: 'low',
  },
  {
    id: 'AC-8',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-8',
    controlName: 'System Use Notification',
    description: 'Display a system use notification message before granting access.',
    azureImplementation: 'Configure a "Terms of Use" policy in Microsoft Entra Conditional Access. This will require all users to view and accept the defined notification banner before completing sign-in to any Azure-integrated application.',
    status: 'compliant',
    implementation: 'Terms of Use in Conditional Access',
    lastAssessed: '2024-11-10',
    assessedBy: 'Legal/Compliance',
    evidence: ['Terms of Use policy', 'User acceptance logs'],
    riskLevel: 'low',
  },
  {
    id: 'AU-1',
    controlFamily: 'Audit and Accountability',
    controlIdentifier: 'AU-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate an audit and accountability policy and procedures.',
    azureImplementation: 'This is a procedural control. The organization must develop a formal Audit and Accountability Policy. Store the document in Azure Repos and use manual Azure Policy definitions (e.g., CMA_0154) to attest to its existence and review.',
    status: 'compliant',
    implementation: 'Audit policies documented and approved',
    lastAssessed: '2024-12-01',
    assessedBy: 'Compliance Officer',
    evidence: ['Audit policy document', 'Management approval'],
    riskLevel: 'low',
  },
  {
    id: 'AU-2',
    controlFamily: 'Audit and Accountability',
    controlIdentifier: 'AU-2',
    controlName: 'Event Logging',
    description: 'Identify and log specific event types to support incident investigations.',
    azureImplementation: 'Deploy a central Azure Log Analytics workspace. Use Azure Policy to enforce that Diagnostic Settings are enabled for all Azure resources, forwarding logs to the central workspace. Enable Microsoft Sentinel data connectors for Microsoft Entra ID, Microsoft 365, and other critical services.',
    status: 'compliant',
    implementation: 'Central Log Analytics with comprehensive logging',
    lastAssessed: '2024-11-25',
    assessedBy: 'Security Operations',
    evidence: ['Log Analytics workspace', 'Diagnostic Settings policies', 'Sentinel connectors'],
    riskLevel: 'low',
  },
  {
    id: 'AU-3',
    controlFamily: 'Audit and Accountability',
    controlIdentifier: 'AU-3',
    controlName: 'Content of Audit Records',
    description: 'Ensure audit records contain sufficient information to establish what, when, where, who, source, and outcome.',
    azureImplementation: 'This is met by the native logging capabilities of Azure services. Azure Activity Logs and Microsoft Entra ID logs are structured to include the required information by default. The primary task is to ensure these logs are collected as described in AU-2.',
    status: 'compliant',
    implementation: 'Native Azure logging with structured formats',
    lastAssessed: '2024-11-20',
    assessedBy: 'Security Analyst',
    evidence: ['Log format documentation', 'Sample audit records'],
    riskLevel: 'low',
  },
  {
    id: 'AU-4',
    controlFamily: 'Audit and Accountability',
    controlIdentifier: 'AU-4',
    controlName: 'Audit Record Retention',
    description: 'Retain audit records for a defined time period.',
    azureImplementation: 'Configure the data retention period on the central Log Analytics Workspace (e.g., 90 days for hot data). For long-term retention, configure data export from Log Analytics to an Azure Storage account with an immutability policy (WORM) enabled.',
    status: 'compliant',
    implementation: 'Log Analytics retention with long-term archival',
    lastAssessed: '2024-11-15',
    assessedBy: 'Data Management',
    evidence: ['Retention policies', 'WORM storage configuration'],
    riskLevel: 'low',
  },
  {
    id: 'CA-1',
    controlFamily: 'Assessment, Authorization, and Monitoring',
    controlIdentifier: 'CA-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate an assessment, authorization, and monitoring policy and procedures.',
    azureImplementation: 'This is a procedural control. The organization must develop a formal policy for its Risk Management Framework (RMF) process. Store the document in Azure Repos and use manual Azure Policy definitions (e.g., CMA_0477) to attest to its existence and review.',
    status: 'compliant',
    implementation: 'RMF policy documented and approved',
    lastAssessed: '2024-12-01',
    assessedBy: 'Risk Manager',
    evidence: ['RMF policy document', 'Approval documentation'],
    riskLevel: 'low',
  },
  {
    id: 'CA-2',
    controlFamily: 'Assessment, Authorization, and Monitoring',
    controlIdentifier: 'CA-2',
    controlName: 'Control Assessments',
    description: 'Develop a control assessment plan and conduct assessments of security and privacy controls.',
    azureImplementation: 'Assign the built-in "NIST SP 800-53 Rev. 5" regulatory compliance initiative in Azure Policy. The results are aggregated in the Microsoft Defender for Cloud regulatory compliance dashboard, providing a continuous, automated assessment of technical controls.',
    status: 'compliant',
    implementation: 'Automated assessment via Defender for Cloud',
    lastAssessed: '2024-11-30',
    assessedBy: 'Security Team',
    evidence: ['Azure Policy compliance dashboard', 'Assessment reports'],
    riskLevel: 'low',
  },
  {
    id: 'CA-3',
    controlFamily: 'Assessment, Authorization, and Monitoring',
    controlIdentifier: 'CA-3',
    controlName: 'Information Exchange',
    description: 'Approve and manage the exchange of information between systems using formal agreements.',
    azureImplementation: 'This is a procedural and contractual control. For every external system connection, an Interconnection Security Agreement (ISA) must be established. Use manual Azure Policy controls (e.g., CMA_0435) to attest that these agreements are in place.',
    status: 'partial',
    implementation: 'ISAs in development for some connections',
    lastAssessed: '2024-10-15',
    assessedBy: 'Legal/Security',
    evidence: ['Draft ISA documents'],
    riskLevel: 'medium',
    poamItems: ['POAM-003'],
  },
  // Continue with additional Access Control family controls
  {
    id: 'AC-9',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-9',
    controlName: 'Previous Logon Notification',
    description: 'Notify users of previous logons upon successful logon.',
    azureImplementation: 'Enable Azure AD sign-in risk detection and configure notifications. Use Microsoft Entra ID Protection to alert users of suspicious sign-in activities. Configure Azure Monitor alerts for unusual logon patterns.',
    status: 'compliant',
    implementation: 'Azure AD risk detection enabled',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Analyst',
    evidence: ['Azure AD Protection configuration', 'Risk alerts'],
    riskLevel: 'low',
  },
  {
    id: 'AC-10',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-10',
    controlName: 'Concurrent Session Control',
    description: 'Limit the number of concurrent sessions for user accounts.',
    azureImplementation: 'Configure session controls in Microsoft Entra Conditional Access policies. Set session lifetime limits and implement continuous access evaluation. Use Azure AD Identity Protection to detect and respond to concurrent session anomalies.',
    status: 'partial',
    implementation: 'Basic session controls in place',
    lastAssessed: '2024-11-15',
    assessedBy: 'Security Analyst',
    evidence: ['Conditional Access policies'],
    riskLevel: 'medium',
  },
  {
    id: 'AC-11',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-11',
    controlName: 'Device Lock',
    description: 'Prevent further access by initiating a device lock after a period of inactivity.',
    azureImplementation: 'Configure device compliance policies in Microsoft Intune to enforce screen lock and idle timeout requirements. Use Windows Hello for Business for secure unlock mechanisms. Deploy Azure AD device-based Conditional Access.',
    status: 'compliant',
    implementation: 'Intune device policies deployed',
    lastAssessed: '2024-12-01',
    assessedBy: 'Endpoint Management',
    evidence: ['Intune compliance policies', 'Device compliance reports'],
    riskLevel: 'low',
  },
  {
    id: 'AC-12',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-12',
    controlName: 'Session Termination',
    description: 'Automatically terminate user sessions after specified conditions or events.',
    azureImplementation: 'Configure session timeout policies in Azure AD Conditional Access. Implement persistent browser session controls and sign-in frequency requirements. Use Azure AD Privileged Identity Management (PIM) for just-in-time administrative access with automatic session termination.',
    status: 'compliant',
    implementation: 'Session management via Conditional Access',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Analyst',
    evidence: ['Conditional Access session policies', 'PIM configuration'],
    riskLevel: 'low',
  },
  {
    id: 'AC-14',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-14',
    controlName: 'Permitted Actions Without Identification or Authentication',
    description: 'Identify and document specific user actions that can be performed without identification or authentication.',
    azureImplementation: 'Configure Azure AD guest access policies and external collaboration settings. Use Azure AD B2B for controlled external access. Implement Azure Front Door or Azure Application Gateway for public-facing services that require limited unauthenticated access.',
    status: 'partial',
    implementation: 'Guest policies configured, documentation incomplete',
    lastAssessed: '2024-11-20',
    assessedBy: 'Security Analyst',
    evidence: ['Azure AD guest settings'],
    riskLevel: 'medium',
  },
  {
    id: 'AC-16',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-16',
    controlName: 'Security and Privacy Attributes',
    description: 'Provide the means to associate security and privacy attributes with information in storage, processing, and transmission.',
    azureImplementation: 'Implement Microsoft Purview Information Protection with sensitivity labels. Use Azure Resource Tags for classification metadata. Configure Microsoft Defender for Cloud Apps for data classification and protection across cloud services.',
    status: 'partial',
    implementation: 'Sensitivity labels implemented, resource tagging in progress',
    lastAssessed: '2024-11-10',
    assessedBy: 'Data Protection Officer',
    evidence: ['Purview configuration', 'Sensitivity label policies'],
    riskLevel: 'medium',
  },
  {
    id: 'AC-17',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-17',
    controlName: 'Remote Access',
    description: 'Establish and document usage restrictions, configuration requirements, and implementation guidance for remote access.',
    azureImplementation: 'Deploy Azure Virtual Desktop (AVD) for secure remote access to corporate resources. Configure Azure AD Conditional Access with location-based policies and device compliance requirements. Implement Azure Bastion for secure RDP/SSH access to Azure VMs.',
    status: 'compliant',
    implementation: 'AVD and Conditional Access deployed',
    lastAssessed: '2024-12-01',
    assessedBy: 'Infrastructure Team',
    evidence: ['AVD deployment', 'Conditional Access policies', 'Bastion configuration'],
    riskLevel: 'low',
  },
  {
    id: 'AC-18',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-18',
    controlName: 'Wireless Access',
    description: 'Establish usage restrictions, configuration requirements, and implementation guidance for wireless access.',
    azureImplementation: 'Configure wireless security policies in Microsoft Intune. Use certificate-based authentication for WiFi with Azure AD certificate enrollment. Implement network access control with Azure AD authentication for wireless networks.',
    status: 'compliant',
    implementation: 'Certificate-based WiFi authentication',
    lastAssessed: '2024-12-01',
    assessedBy: 'Network Security',
    evidence: ['Intune WiFi policies', 'Certificate templates'],
    riskLevel: 'low',
  },
  {
    id: 'AC-19',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-19',
    controlName: 'Access Control for Mobile Devices',
    description: 'Establish usage restrictions, configuration requirements, and implementation guidance for mobile devices.',
    azureImplementation: 'Deploy Microsoft Intune Mobile Device Management (MDM) and Mobile Application Management (MAM). Configure device compliance policies, app protection policies, and conditional access for mobile devices. Use Azure AD device registration and conditional access.',
    status: 'compliant',
    implementation: 'Intune MDM/MAM deployed',
    lastAssessed: '2024-12-01',
    assessedBy: 'Mobile Security Team',
    evidence: ['Intune policies', 'Device compliance reports', 'App protection policies'],
    riskLevel: 'low',
  },
  {
    id: 'AC-20',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-20',
    controlName: 'Use of External Systems',
    description: 'Establish terms and conditions for authorized individuals to use external systems.',
    azureImplementation: 'Configure Microsoft Defender for Cloud Apps to monitor and control access to external SaaS applications. Use Azure AD Conditional Access to restrict access to approved cloud apps. Implement Cloud App Security policies for data loss prevention.',
    status: 'partial',
    implementation: 'Cloud App Security partially deployed',
    lastAssessed: '2024-11-15',
    assessedBy: 'Cloud Security',
    evidence: ['Defender for Cloud Apps configuration'],
    riskLevel: 'medium',
  },
  {
    id: 'AC-21',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-21',
    controlName: 'Information Sharing',
    description: 'Enable authorized users to determine whether access authorizations assigned to sharing partners are appropriate.',
    azureImplementation: 'Use Microsoft Purview Data Loss Prevention (DLP) policies to control information sharing. Configure Azure AD entitlement management for guest access reviews. Implement Microsoft Teams external sharing controls and monitoring.',
    status: 'partial',
    implementation: 'DLP policies configured, sharing controls in development',
    lastAssessed: '2024-11-20',
    assessedBy: 'Data Governance',
    evidence: ['DLP policies', 'Teams sharing settings'],
    riskLevel: 'medium',
  },
  {
    id: 'AC-22',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-22',
    controlName: 'Publicly Accessible Content',
    description: 'Designate individuals authorized to make information publicly accessible.',
    azureImplementation: 'Configure Azure Blob Storage with appropriate access tiers and public access controls. Use Azure CDN with custom domain and access controls. Implement Azure Static Web Apps with authentication and authorization controls for public content.',
    status: 'compliant',
    implementation: 'Public content controls implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Web Services Team',
    evidence: ['Storage access policies', 'CDN configuration'],
    riskLevel: 'low',
  },
  {
    id: 'AC-23',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-23',
    controlName: 'Data Mining Protection',
    description: 'Employ data mining prevention and detection techniques for data storage objects.',
    azureImplementation: 'Use Microsoft Purview to discover and classify sensitive data across Azure services. Configure Microsoft Defender for Cloud Apps anomaly detection for unusual data access patterns. Implement Azure Sentinel for advanced threat detection and data mining activity monitoring.',
    status: 'partial',
    implementation: 'Data discovery implemented, anomaly detection in progress',
    lastAssessed: '2024-11-10',
    assessedBy: 'Data Security',
    evidence: ['Purview scan results', 'Defender for Cloud Apps policies'],
    riskLevel: 'medium',
  },
  {
    id: 'AC-24',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-24',
    controlName: 'Access Control Decisions',
    description: 'Establish procedures to ensure access control decisions are applied consistently.',
    azureImplementation: 'Implement standardized Azure RBAC roles and Azure AD group-based access management. Use Azure Policy to enforce consistent access control configurations. Deploy Azure AD Privileged Identity Management for consistent privileged access decisions.',
    status: 'compliant',
    implementation: 'Standardized RBAC and group management',
    lastAssessed: '2024-12-01',
    assessedBy: 'Identity Management',
    evidence: ['RBAC role definitions', 'Azure Policy assignments', 'PIM configuration'],
    riskLevel: 'low',
  },
  {
    id: 'AC-25',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-25',
    controlName: 'Reference Monitor',
    description: 'Implement a reference monitor for access control decisions.',
    azureImplementation: 'Azure AD serves as the centralized reference monitor for access control decisions. Configure Azure AD as the authoritative source for authentication and authorization decisions across all Azure services and integrated applications.',
    status: 'compliant',
    implementation: 'Azure AD centralized access control',
    lastAssessed: '2024-12-01',
    assessedBy: 'Identity Architect',
    evidence: ['Azure AD configuration', 'Service integration documentation'],
    riskLevel: 'low',
  },
  // Configuration Management Controls
  {
    id: 'CM-1',
    controlFamily: 'Configuration Management',
    controlIdentifier: 'CM-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate configuration management policies and procedures.',
    azureImplementation: 'This is a procedural control. Develop formal Configuration Management policies and store in Azure Repos. Use Azure Policy for technical enforcement and manual attestation controls (e.g., CMA_0144) to verify policy existence and compliance.',
    status: 'compliant',
    implementation: 'CM policies documented and approved',
    lastAssessed: '2024-12-01',
    assessedBy: 'Configuration Manager',
    evidence: ['CM policy document', 'Approval documentation'],
    riskLevel: 'low',
  },
  {
    id: 'CM-2',
    controlFamily: 'Configuration Management',
    controlIdentifier: 'CM-2',
    controlName: 'Baseline Configuration',
    description: 'Develop, document, and maintain baseline configurations for systems.',
    azureImplementation: 'Use Azure Automation State Configuration (DSC) to define and maintain baseline configurations. Implement Azure Policy with Guest Configuration for continuous compliance monitoring. Store baseline configurations in Azure Repos with version control.',
    status: 'compliant',
    implementation: 'DSC and Azure Policy baselines deployed',
    lastAssessed: '2024-12-01',
    assessedBy: 'Systems Engineer',
    evidence: ['DSC configurations', 'Azure Policy assignments', 'Baseline documentation'],
    riskLevel: 'low',
  },
  {
    id: 'CM-3',
    controlFamily: 'Configuration Management',
    controlIdentifier: 'CM-3',
    controlName: 'Configuration Change Control',
    description: 'Determine and control configuration changes to systems.',
    azureImplementation: 'Implement Azure DevOps or GitHub Actions for change control workflows. Use Azure Resource Manager templates and Bicep for infrastructure as code. Configure Azure Policy to prevent unauthorized configuration changes and Azure Resource Graph for change tracking.',
    status: 'compliant',
    implementation: 'DevOps change control implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'DevOps Team',
    evidence: ['DevOps workflows', 'ARM templates', 'Policy assignments'],
    riskLevel: 'low',
  },
  {
    id: 'CM-4',
    controlFamily: 'Configuration Management',
    controlIdentifier: 'CM-4',
    controlName: 'Impact Analyses',
    description: 'Analyze changes to systems to determine potential security and privacy impacts.',
    azureImplementation: 'Use Azure DevOps change management workflows with required approvals and impact assessment forms. Implement Azure Resource Graph queries to assess change impacts. Configure Azure Advisor and Azure Security Center for security impact analysis.',
    status: 'partial',
    implementation: 'Basic impact analysis in DevOps, enhanced analysis needed',
    lastAssessed: '2024-11-15',
    assessedBy: 'Change Management',
    evidence: ['DevOps approval workflows'],
    riskLevel: 'medium',
  },
  {
    id: 'CM-5',
    controlFamily: 'Configuration Management',
    controlIdentifier: 'CM-5',
    controlName: 'Access Restrictions for Change',
    description: 'Define, document, approve, and enforce access restrictions associated with changes to systems.',
    azureImplementation: 'Use Azure RBAC to restrict who can make configuration changes. Implement Azure DevOps permissions and branch protection policies. Configure Azure PIM for just-in-time access to production environments for change implementation.',
    status: 'compliant',
    implementation: 'RBAC and DevOps permissions implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Team',
    evidence: ['RBAC assignments', 'DevOps permissions', 'PIM configuration'],
    riskLevel: 'low',
  },
  {
    id: 'CM-6',
    controlFamily: 'Configuration Management',
    controlIdentifier: 'CM-6',
    controlName: 'Configuration Settings',
    description: 'Establish and document configuration settings for systems using security configuration checklists.',
    azureImplementation: 'Use Azure Security Benchmark and CIS benchmarks as configuration baselines. Implement Azure Policy Guest Configuration to enforce security settings. Use Azure Automation State Configuration for Windows and Linux configuration management.',
    status: 'compliant',
    implementation: 'Security benchmarks implemented via Azure Policy',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Engineer',
    evidence: ['Azure Policy assignments', 'Guest Configuration reports', 'Security benchmark compliance'],
    riskLevel: 'low',
  },
  {
    id: 'CM-7',
    controlFamily: 'Configuration Management',
    controlIdentifier: 'CM-7',
    controlName: 'Least Functionality',
    description: 'Configure systems to provide only essential capabilities.',
    azureImplementation: 'Use Azure Container Instances or Azure Kubernetes Service with minimal base images. Configure Azure App Service with only necessary features enabled. Implement Azure Policy to prevent installation of unnecessary Azure services and features.',
    status: 'partial',
    implementation: 'Container images hardened, service configuration review needed',
    lastAssessed: '2024-11-20',
    assessedBy: 'Platform Engineer',
    evidence: ['Container scan results', 'App Service configurations'],
    riskLevel: 'medium',
  },
  {
    id: 'CM-8',
    controlFamily: 'Configuration Management',
    controlIdentifier: 'CM-8',
    controlName: 'System Component Inventory',
    description: 'Develop and document an inventory of system components.',
    azureImplementation: 'Use Azure Resource Graph to maintain comprehensive inventory of Azure resources. Implement Azure Update Management for VM inventory. Configure Microsoft Defender for Cloud for asset inventory and security posture management.',
    status: 'compliant',
    implementation: 'Azure Resource Graph inventory implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Asset Manager',
    evidence: ['Resource Graph queries', 'Defender for Cloud inventory', 'Update Management reports'],
    riskLevel: 'low',
  },
  {
    id: 'CM-9',
    controlFamily: 'Configuration Management',
    controlIdentifier: 'CM-9',
    controlName: 'Configuration Management Plan',
    description: 'Develop, document, and implement a configuration management plan.',
    azureImplementation: 'This is a procedural control requiring a formal configuration management plan. Store the plan in Azure Repos and use manual Azure Policy controls to attest to its existence, implementation, and regular review.',
    status: 'compliant',
    implementation: 'CM plan documented and implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Configuration Manager',
    evidence: ['CM plan document', 'Implementation evidence'],
    riskLevel: 'low',
  },
  {
    id: 'CM-10',
    controlFamily: 'Configuration Management',
    controlIdentifier: 'CM-10',
    controlName: 'Software Usage Restrictions',
    description: 'Use software and associated documentation in accordance with contract agreements and copyright laws.',
    azureImplementation: 'Use Azure Cost Management to track software licensing costs. Implement Azure Policy to control software installations and deployments. Configure Microsoft Defender for Cloud Apps to monitor SaaS application usage and licensing compliance.',
    status: 'partial',
    implementation: 'Cost tracking implemented, policy controls needed',
    lastAssessed: '2024-11-10',
    assessedBy: 'License Manager',
    evidence: ['Cost Management reports'],
    riskLevel: 'medium',
  },
  {
    id: 'CM-11',
    controlFamily: 'Configuration Management',
    controlIdentifier: 'CM-11',
    controlName: 'User-Installed Software',
    description: 'Establish policies governing the installation of software by users.',
    azureImplementation: 'Use Microsoft Intune to control software installation on managed devices. Configure Azure AD device compliance policies to prevent unapproved software. Implement Microsoft Defender for Endpoint for application control and software inventory.',
    status: 'compliant',
    implementation: 'Intune software control policies deployed',
    lastAssessed: '2024-12-01',
    assessedBy: 'Endpoint Security',
    evidence: ['Intune policies', 'Device compliance reports', 'Defender for Endpoint configuration'],
    riskLevel: 'low',
  },
  // Contingency Planning Controls
  {
    id: 'CP-1',
    controlFamily: 'Contingency Planning',
    controlIdentifier: 'CP-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate contingency planning policies and procedures.',
    azureImplementation: 'This is a procedural control. Develop formal Business Continuity and Disaster Recovery policies. Store documentation in Azure Repos and use manual Azure Policy controls to attest to policy existence and regular review.',
    status: 'compliant',
    implementation: 'BCDR policies documented and approved',
    lastAssessed: '2024-12-01',
    assessedBy: 'Business Continuity Manager',
    evidence: ['BCDR policy documents', 'Approval documentation'],
    riskLevel: 'low',
  },
  {
    id: 'CP-2',
    controlFamily: 'Contingency Planning',
    controlIdentifier: 'CP-2',
    controlName: 'Contingency Plan',
    description: 'Develop a contingency plan for systems that addresses contingencies, emergency response, and post-disaster recovery.',
    azureImplementation: 'Implement Azure Site Recovery for automated disaster recovery. Use Azure Backup for data protection across multiple regions. Develop runbooks using Azure Automation for emergency response procedures.',
    status: 'compliant',
    implementation: 'Azure Site Recovery and Backup implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Disaster Recovery Team',
    evidence: ['Site Recovery configuration', 'Backup policies', 'Recovery runbooks'],
    riskLevel: 'low',
  },
  {
    id: 'CP-3',
    controlFamily: 'Contingency Planning',
    controlIdentifier: 'CP-3',
    controlName: 'Contingency Training',
    description: 'Provide contingency plan training to system users.',
    azureImplementation: 'This is a procedural control. Conduct regular disaster recovery exercises and document training completion. Use Azure DevOps to track training completion and schedule regular tabletop exercises.',
    status: 'partial',
    implementation: 'Training plan developed, regular exercises needed',
    lastAssessed: '2024-11-15',
    assessedBy: 'Training Coordinator',
    evidence: ['Training materials', 'Exercise documentation'],
    riskLevel: 'medium',
  },
  {
    id: 'CP-4',
    controlFamily: 'Contingency Planning',
    controlIdentifier: 'CP-4',
    controlName: 'Contingency Plan Testing',
    description: 'Test contingency plans to determine effectiveness and readiness to execute the plans.',
    azureImplementation: 'Use Azure Site Recovery test failover capabilities for regular DR testing. Implement Azure Chaos Studio for resilience testing. Schedule automated backup restoration tests using Azure Automation.',
    status: 'compliant',
    implementation: 'Automated DR testing implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'DR Test Team',
    evidence: ['Site Recovery test reports', 'Chaos Studio experiments', 'Backup test results'],
    riskLevel: 'low',
  },
  // Identification and Authentication Controls
  {
    id: 'IA-1',
    controlFamily: 'Identification and Authentication',
    controlIdentifier: 'IA-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate identification and authentication policies and procedures.',
    azureImplementation: 'This is a procedural control. Develop formal Identity and Access Management policies covering authentication requirements. Store in Azure Repos and use manual Azure Policy controls to attest to policy existence and compliance.',
    status: 'compliant',
    implementation: 'IAM policies documented and approved',
    lastAssessed: '2024-12-01',
    assessedBy: 'Identity Manager',
    evidence: ['IAM policy documents', 'Approval documentation'],
    riskLevel: 'low',
  },
  {
    id: 'IA-2',
    controlFamily: 'Identification and Authentication',
    controlIdentifier: 'IA-2',
    controlName: 'Identification and Authentication (Organizational Users)',
    description: 'Uniquely identify and authenticate organizational users.',
    azureImplementation: 'Use Azure AD as the authoritative identity provider. Configure single sign-on (SSO) for all applications. Implement Azure AD Multi-Factor Authentication (MFA) for all user accounts. Use Azure AD Connect for hybrid identity synchronization.',
    status: 'compliant',
    implementation: 'Azure AD with MFA implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Identity Team',
    evidence: ['Azure AD configuration', 'MFA policies', 'SSO implementation'],
    riskLevel: 'low',
  },
  {
    id: 'IA-3',
    controlFamily: 'Identification and Authentication',
    controlIdentifier: 'IA-3',
    controlName: 'Device Identification and Authentication',
    description: 'Uniquely identify and authenticate devices before establishing connections.',
    azureImplementation: 'Implement Azure AD device registration and device-based Conditional Access. Use Azure AD Certificate Authority for device certificates. Configure Microsoft Intune for device compliance and authentication.',
    status: 'compliant',
    implementation: 'Device authentication via Azure AD and Intune',
    lastAssessed: '2024-12-01',
    assessedBy: 'Device Management',
    evidence: ['Device registration policies', 'Certificate templates', 'Intune configuration'],
    riskLevel: 'low',
  },
  {
    id: 'IA-4',
    controlFamily: 'Identification and Authentication',
    controlIdentifier: 'IA-4',
    controlName: 'Identifier Management',
    description: 'Manage system identifiers by receiving authorization for new identifiers.',
    azureImplementation: 'Use Azure AD lifecycle workflows for automated identity provisioning and deprovisioning. Implement approval workflows using Azure AD entitlement management. Configure identity governance with access reviews and separation of duties.',
    status: 'compliant',
    implementation: 'Automated identity lifecycle management',
    lastAssessed: '2024-12-01',
    assessedBy: 'Identity Governance',
    evidence: ['Lifecycle workflows', 'Entitlement management', 'Access review reports'],
    riskLevel: 'low',
  },
  {
    id: 'IA-5',
    controlFamily: 'Identification and Authentication',
    controlIdentifier: 'IA-5',
    controlName: 'Authenticator Management',
    description: 'Manage system authenticators including initial authenticator distribution and subsequent authenticator revocation.',
    azureImplementation: 'Use Azure AD password policies and Azure AD Password Protection. Implement Windows Hello for Business for passwordless authentication. Configure Azure AD certificate-based authentication and smart card authentication.',
    status: 'compliant',
    implementation: 'Multi-factor authenticator management via Azure AD',
    lastAssessed: '2024-12-01',
    assessedBy: 'Authentication Team',
    evidence: ['Password policies', 'Windows Hello deployment', 'Certificate management'],
    riskLevel: 'low',
  },
  {
    id: 'IA-6',
    controlFamily: 'Identification and Authentication',
    controlIdentifier: 'IA-6',
    controlName: 'Authentication Feedback',
    description: 'Obscure feedback of authentication information during authentication.',
    azureImplementation: 'Azure AD inherently obscures authentication feedback by design. Configure custom authentication pages to minimize information disclosure. Use Azure AD B2C for customer-facing applications with controlled authentication feedback.',
    status: 'compliant',
    implementation: 'Authentication feedback controls in Azure AD',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Engineer',
    evidence: ['Azure AD configuration', 'Custom sign-in pages'],
    riskLevel: 'low',
  },
  {
    id: 'IA-7',
    controlFamily: 'Identification and Authentication',
    controlIdentifier: 'IA-7',
    controlName: 'Cryptographic Module Authentication',
    description: 'Implement mechanisms for authentication to a cryptographic module that meet requirements.',
    azureImplementation: 'Use Azure Key Vault with Hardware Security Modules (HSM) for cryptographic operations. Implement Azure Dedicated HSM for high assurance requirements. Configure managed service identity for secure access to cryptographic modules.',
    status: 'compliant',
    implementation: 'Azure Key Vault HSM implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Cryptography Team',
    evidence: ['Key Vault HSM configuration', 'Managed identity assignments'],
    riskLevel: 'low',
  },
  {
    id: 'IA-8',
    controlFamily: 'Identification and Authentication',
    controlIdentifier: 'IA-8',
    controlName: 'Identification and Authentication (Non-Organizational Users)',
    description: 'Uniquely identify and authenticate non-organizational users or processes acting on behalf of non-organizational users.',
    azureImplementation: 'Use Azure AD B2B for partner and guest user authentication. Configure Azure AD B2C for customer identity management. Implement cross-tenant access settings for controlled external collaboration.',
    status: 'compliant',
    implementation: 'Azure AD B2B/B2C implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'External Identity Team',
    evidence: ['B2B configuration', 'B2C policies', 'Cross-tenant settings'],
    riskLevel: 'low',
  },
  // Incident Response Controls
  {
    id: 'IR-1',
    controlFamily: 'Incident Response',
    controlIdentifier: 'IR-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate incident response policies and procedures.',
    azureImplementation: 'This is a procedural control. Develop formal Incident Response policies and procedures. Store in Azure Repos and use manual Azure Policy controls to attest to policy existence and regular updates.',
    status: 'compliant',
    implementation: 'IR policies documented and approved',
    lastAssessed: '2024-12-01',
    assessedBy: 'CISO',
    evidence: ['IR policy documents', 'Procedure documentation'],
    riskLevel: 'low',
  },
  {
    id: 'IR-2',
    controlFamily: 'Incident Response',
    controlIdentifier: 'IR-2',
    controlName: 'Incident Response Training',
    description: 'Provide incident response training to system users.',
    azureImplementation: 'This is a procedural control. Conduct regular incident response training and tabletop exercises. Track training completion using Azure DevOps or Microsoft Learning pathways. Document training effectiveness and updates.',
    status: 'partial',
    implementation: 'Basic training conducted, advanced exercises needed',
    lastAssessed: '2024-11-15',
    assessedBy: 'Training Team',
    evidence: ['Training records', 'Exercise documentation'],
    riskLevel: 'medium',
  },
  {
    id: 'IR-3',
    controlFamily: 'Incident Response',
    controlIdentifier: 'IR-3',
    controlName: 'Incident Response Testing',
    description: 'Test incident response procedures to determine effectiveness.',
    azureImplementation: 'Use Azure Sentinel workbooks to simulate incident scenarios. Implement Azure Logic Apps for automated incident response testing. Conduct regular tabletop exercises and document lessons learned.',
    status: 'partial',
    implementation: 'Automated testing framework in development',
    lastAssessed: '2024-11-20',
    assessedBy: 'IR Team',
    evidence: ['Sentinel playbooks', 'Logic Apps workflows'],
    riskLevel: 'medium',
  },
  {
    id: 'IR-4',
    controlFamily: 'Incident Response',
    controlIdentifier: 'IR-4',
    controlName: 'Incident Handling',
    description: 'Implement an incident handling capability for incidents.',
    azureImplementation: 'Deploy Microsoft Sentinel as the Security Information and Event Management (SIEM) platform. Configure automated incident response playbooks using Azure Logic Apps. Integrate with Microsoft Defender products for unified incident management.',
    status: 'compliant',
    implementation: 'Sentinel SIEM with automated response deployed',
    lastAssessed: '2024-12-01',
    assessedBy: 'SOC Team',
    evidence: ['Sentinel configuration', 'Logic Apps playbooks', 'Defender integration'],
    riskLevel: 'low',
  },
  {
    id: 'IR-5',
    controlFamily: 'Incident Response',
    controlIdentifier: 'IR-5',
    controlName: 'Incident Monitoring',
    description: 'Track and document incidents.',
    azureImplementation: 'Use Microsoft Sentinel incident management for tracking and documentation. Configure Azure DevOps for incident workflow management. Implement Azure Monitor alerts for incident detection and escalation.',
    status: 'compliant',
    implementation: 'Sentinel incident tracking implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'SOC Manager',
    evidence: ['Sentinel incidents', 'DevOps workflows', 'Monitor alerts'],
    riskLevel: 'low',
  },
  {
    id: 'IR-6',
    controlFamily: 'Incident Response',
    controlIdentifier: 'IR-6',
    controlName: 'Incident Reporting',
    description: 'Require personnel to report suspected incidents to the incident response capability.',
    azureImplementation: 'Configure automated reporting from Microsoft Defender products to Sentinel. Implement user reporting mechanisms through Microsoft Teams or SharePoint forms. Set up automated notifications using Azure Logic Apps for incident escalation.',
    status: 'compliant',
    implementation: 'Automated incident reporting implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'SOC Team',
    evidence: ['Defender integration', 'Teams reporting bot', 'Logic Apps workflows'],
    riskLevel: 'low',
  },
  {
    id: 'IR-7',
    controlFamily: 'Incident Response',
    controlIdentifier: 'IR-7',
    controlName: 'Incident Response Assistance',
    description: 'Provide an incident response support resource that offers advice and assistance.',
    azureImplementation: 'Leverage Microsoft Security Response Center (MSRC) for critical incidents. Configure Azure Support cases for incident escalation. Establish relationships with Microsoft Customer Success teams for incident response assistance.',
    status: 'compliant',
    implementation: 'Microsoft support channels established',
    lastAssessed: '2024-12-01',
    assessedBy: 'IR Coordinator',
    evidence: ['Support agreements', 'MSRC contacts', 'Escalation procedures'],
    riskLevel: 'low',
  },
  {
    id: 'IR-8',
    controlFamily: 'Incident Response',
    controlIdentifier: 'IR-8',
    controlName: 'Incident Response Plan',
    description: 'Develop an incident response plan that provides a roadmap for implementing an incident response capability.',
    azureImplementation: 'This is a procedural control requiring a comprehensive incident response plan. Store the plan in Azure Repos with version control. Use manual Azure Policy controls to attest to plan existence, testing, and regular updates.',
    status: 'compliant',
    implementation: 'Comprehensive IR plan documented',
    lastAssessed: '2024-12-01',
    assessedBy: 'IR Manager',
    evidence: ['IR plan document', 'Plan review records'],
    riskLevel: 'low',
  },
  // System and Communications Protection Controls
  {
    id: 'SC-1',
    controlFamily: 'System and Communications Protection',
    controlIdentifier: 'SC-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate system and communications protection policies and procedures.',
    azureImplementation: 'This is a procedural control. Develop formal system and communications protection policies. Store in Azure Repos and use manual Azure Policy controls to attest to policy existence and compliance.',
    status: 'compliant',
    implementation: 'System protection policies documented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Architect',
    evidence: ['Policy documents', 'Approval records'],
    riskLevel: 'low',
  },
  {
    id: 'SC-2',
    controlFamily: 'System and Communications Protection',
    controlIdentifier: 'SC-2',
    controlName: 'Separation of System and User Functionality',
    description: 'Separate user functionality from system management functionality.',
    azureImplementation: 'Use Azure RBAC to separate user and administrative functions. Implement Azure Privileged Identity Management (PIM) for administrative access. Configure separate virtual networks and subnets for management and user traffic.',
    status: 'compliant',
    implementation: 'RBAC separation with PIM implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Architect',
    evidence: ['RBAC configuration', 'PIM setup', 'Network segmentation'],
    riskLevel: 'low',
  },
  {
    id: 'SC-3',
    controlFamily: 'System and Communications Protection',
    controlIdentifier: 'SC-3',
    controlName: 'Security Function Isolation',
    description: 'Isolate security functions from non-security functions.',
    azureImplementation: 'Deploy security tools in dedicated Azure subscriptions or resource groups. Use Azure Private Link for secure communication to security services. Implement network security groups to isolate security management traffic.',
    status: 'compliant',
    implementation: 'Security function isolation implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Engineer',
    evidence: ['Subscription architecture', 'Private Link configuration', 'NSG rules'],
    riskLevel: 'low',
  },
  {
    id: 'SC-4',
    controlFamily: 'System and Communications Protection',
    controlIdentifier: 'SC-4',
    controlName: 'Information in Shared System Resources',
    description: 'Prevent unauthorized and unintended information transfer via shared system resources.',
    azureImplementation: 'Azure platform inherently provides isolation between customer workloads. Use Azure confidential computing for additional protection. Implement Azure Key Vault for secure key management and Azure Storage encryption.',
    status: 'compliant',
    implementation: 'Platform isolation with additional encryption',
    lastAssessed: '2024-12-01',
    assessedBy: 'Cloud Architect',
    evidence: ['Confidential computing deployment', 'Key Vault configuration', 'Storage encryption'],
    riskLevel: 'low',
  },
  {
    id: 'SC-5',
    controlFamily: 'System and Communications Protection',
    controlIdentifier: 'SC-5',
    controlName: 'Denial-of-Service Protection',
    description: 'Protect against or limit the effects of denial-of-service attacks.',
    azureImplementation: 'Enable Azure DDoS Protection Standard for virtual networks. Configure Azure Front Door with Web Application Firewall for application-layer DDoS protection. Use Azure Traffic Manager for geographic load distribution.',
    status: 'compliant',
    implementation: 'DDoS Protection Standard with WAF',
    lastAssessed: '2024-12-01',
    assessedBy: 'Network Security',
    evidence: ['DDoS Protection logs', 'WAF configuration', 'Traffic Manager setup'],
    riskLevel: 'low',
  },
  {
    id: 'SC-7',
    controlFamily: 'System and Communications Protection',
    controlIdentifier: 'SC-7',
    controlName: 'Boundary Protection',
    description: 'Monitor, control, and protect communications at external system boundaries.',
    azureImplementation: 'Deploy Azure Firewall in a hub-and-spoke network topology. Configure Network Security Groups for micro-segmentation. Use Azure Application Gateway with WAF for web application protection. Implement Azure Bastion for secure remote access.',
    status: 'partial',
    implementation: 'Firewall and NSGs deployed, WAF configuration in progress',
    lastAssessed: '2024-11-20',
    assessedBy: 'Network Team',
    evidence: ['Firewall rules', 'NSG configuration', 'Application Gateway logs'],
    riskLevel: 'medium',
    poamItems: ['POAM-002'],
  },
  {
    id: 'SC-8',
    controlFamily: 'System and Communications Protection',
    controlIdentifier: 'SC-8',
    controlName: 'Transmission Confidentiality and Integrity',
    description: 'Protect the confidentiality and integrity of transmitted information.',
    azureImplementation: 'Use TLS 1.2 or higher for all communications. Configure Azure Application Gateway and Front Door with HTTPS termination. Implement Azure VPN Gateway or ExpressRoute for secure site-to-site connectivity.',
    status: 'compliant',
    implementation: 'TLS encryption with secure gateways',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Engineer',
    evidence: ['TLS configuration', 'Gateway certificates', 'VPN setup'],
    riskLevel: 'low',
  },
  {
    id: 'SC-12',
    controlFamily: 'System and Communications Protection',
    controlIdentifier: 'SC-12',
    controlName: 'Cryptographic Key Establishment and Management',
    description: 'Establish and manage cryptographic keys used in cryptographic functions.',
    azureImplementation: 'Use Azure Key Vault for centralized key management. Implement Azure Key Vault Managed HSM for high-security requirements. Configure automatic key rotation and access policies with Azure RBAC.',
    status: 'compliant',
    implementation: 'Key Vault with automated rotation',
    lastAssessed: '2024-12-01',
    assessedBy: 'Cryptography Team',
    evidence: ['Key Vault configuration', 'Rotation policies', 'Access logs'],
    riskLevel: 'low',
  },
  {
    id: 'SC-13',
    controlFamily: 'System and Communications Protection',
    controlIdentifier: 'SC-13',
    controlName: 'Cryptographic Protection',
    description: 'Implement cryptographic mechanisms to prevent unauthorized disclosure and modification of information.',
    azureImplementation: 'Enable encryption at rest for all Azure Storage accounts and databases. Use Azure Disk Encryption for virtual machine disks. Configure Always Encrypted for SQL Database sensitive data.',
    status: 'compliant',
    implementation: 'Comprehensive encryption at rest and in transit',
    lastAssessed: '2024-12-01',
    assessedBy: 'Data Protection Team',
    evidence: ['Storage encryption status', 'Disk encryption reports', 'Always Encrypted configuration'],
    riskLevel: 'low',
  },
  // System and Information Integrity Controls
  {
    id: 'SI-1',
    controlFamily: 'System and Information Integrity',
    controlIdentifier: 'SI-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate system and information integrity policies and procedures.',
    azureImplementation: 'This is a procedural control. Develop formal system integrity policies covering malware protection, vulnerability management, and information integrity. Store in Azure Repos with manual Azure Policy attestation.',
    status: 'compliant',
    implementation: 'System integrity policies documented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Manager',
    evidence: ['Policy documents', 'Procedure guides'],
    riskLevel: 'low',
  },
  {
    id: 'SI-2',
    controlFamily: 'System and Information Integrity',
    controlIdentifier: 'SI-2',
    controlName: 'Flaw Remediation',
    description: 'Identify, report, and correct system flaws.',
    azureImplementation: 'Use Azure Update Management for automated patch deployment. Configure Microsoft Defender for Cloud for vulnerability assessment. Implement Azure DevOps for tracking and remediating application vulnerabilities.',
    status: 'compliant',
    implementation: 'Automated patching with vulnerability scanning',
    lastAssessed: '2024-12-01',
    assessedBy: 'Vulnerability Management',
    evidence: ['Update Management reports', 'Defender scan results', 'DevOps work items'],
    riskLevel: 'low',
  },
  {
    id: 'SI-3',
    controlFamily: 'System and Information Integrity',
    controlIdentifier: 'SI-3',
    controlName: 'Malicious Code Protection',
    description: 'Implement malicious code protection mechanisms.',
    azureImplementation: 'Deploy Microsoft Defender for Endpoint on all systems. Configure Microsoft Defender Antivirus with cloud protection. Use Microsoft Defender for Cloud Apps for cloud application malware protection.',
    status: 'compliant',
    implementation: 'Defender suite deployed across environment',
    lastAssessed: '2024-12-01',
    assessedBy: 'Endpoint Security',
    evidence: ['Defender for Endpoint reports', 'Antivirus policies', 'Cloud Apps protection'],
    riskLevel: 'low',
  },
  {
    id: 'SI-4',
    controlFamily: 'System and Information Integrity',
    controlIdentifier: 'SI-4',
    controlName: 'System Monitoring',
    description: 'Monitor systems to detect attacks and indicators of potential attacks.',
    azureImplementation: 'Deploy Microsoft Sentinel for security monitoring and threat detection. Configure Azure Monitor for infrastructure monitoring. Use Microsoft Defender for Cloud for security posture monitoring and threat protection.',
    status: 'compliant',
    implementation: 'Comprehensive monitoring with Sentinel and Defender',
    lastAssessed: '2024-12-01',
    assessedBy: 'SOC Team',
    evidence: ['Sentinel analytics rules', 'Monitor alerts', 'Defender dashboards'],
    riskLevel: 'low',
  },
  {
    id: 'SI-5',
    controlFamily: 'System and Information Integrity',
    controlIdentifier: 'SI-5',
    controlName: 'Security Alerts, Advisories, and Directives',
    description: 'Receive system security alerts, advisories, and directives from external organizations.',
    azureImplementation: 'Subscribe to Microsoft Security Response Center (MSRC) advisories. Configure Azure Service Health alerts for security-related service issues. Implement automated threat intelligence feeds in Microsoft Sentinel.',
    status: 'compliant',
    implementation: 'Automated security advisory integration',
    lastAssessed: '2024-12-01',
    assessedBy: 'Threat Intelligence',
    evidence: ['MSRC subscriptions', 'Service Health configuration', 'Threat intelligence feeds'],
    riskLevel: 'low',
  },
  // Personnel Security Controls
  {
    id: 'PS-1',
    controlFamily: 'Personnel Security',
    controlIdentifier: 'PS-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate personnel security policies and procedures.',
    azureImplementation: 'This is a procedural control. Develop formal personnel security policies covering background investigations, access agreements, and termination procedures. Store in Azure Repos with manual Azure Policy attestation.',
    status: 'compliant',
    implementation: 'Personnel security policies documented',
    lastAssessed: '2024-12-01',
    assessedBy: 'HR Security',
    evidence: ['Policy documents', 'HR procedures'],
    riskLevel: 'low',
  },
  {
    id: 'PS-2',
    controlFamily: 'Personnel Security',
    controlIdentifier: 'PS-2',
    controlName: 'Position Risk Designation',
    description: 'Assign a risk designation to all organizational positions.',
    azureImplementation: 'This is a procedural control implemented through HR processes. Use Azure AD groups to organize users by risk designation and apply appropriate access controls through RBAC and Conditional Access policies.',
    status: 'compliant',
    implementation: 'Risk-based access groups implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'HR Security',
    evidence: ['Position risk matrix', 'Azure AD group assignments'],
    riskLevel: 'low',
  },
  {
    id: 'PS-3',
    controlFamily: 'Personnel Security',
    controlIdentifier: 'PS-3',
    controlName: 'Personnel Screening',
    description: 'Screen individuals prior to authorizing access to organizational systems.',
    azureImplementation: 'This is a procedural control managed by HR. Use Azure AD conditional access to enforce completion of background verification before granting system access. Implement manual verification workflows.',
    status: 'compliant',
    implementation: 'Background screening process implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'HR Security',
    evidence: ['Screening procedures', 'Conditional access policies'],
    riskLevel: 'low',
  },
  {
    id: 'PS-4',
    controlFamily: 'Personnel Security',
    controlIdentifier: 'PS-4',
    controlName: 'Personnel Termination',
    description: 'Terminate system access when individuals are terminated or transferred.',
    azureImplementation: 'Use Azure AD lifecycle workflows to automate account disabling upon termination. Integrate with HR systems for automated triggering. Implement Azure AD access reviews for periodic verification of terminated user access.',
    status: 'compliant',
    implementation: 'Automated termination workflows',
    lastAssessed: '2024-12-01',
    assessedBy: 'Identity Management',
    evidence: ['Lifecycle workflows', 'HR integration', 'Access review reports'],
    riskLevel: 'low',
  },
  {
    id: 'PS-5',
    controlFamily: 'Personnel Security',
    controlIdentifier: 'PS-5',
    controlName: 'Personnel Transfer',
    description: 'Review and confirm ongoing operational need for current logical and physical access authorizations when individuals are reassigned or transferred.',
    azureImplementation: 'Use Azure AD entitlement management to define access packages by role. Configure approval workflows for role changes. Implement automated access reviews triggered by organizational changes.',
    status: 'partial',
    implementation: 'Basic role-based access, enhanced workflows needed',
    lastAssessed: '2024-11-15',
    assessedBy: 'HR Security',
    evidence: ['Entitlement management configuration'],
    riskLevel: 'medium',
  },
  {
    id: 'PS-6',
    controlFamily: 'Personnel Security',
    controlIdentifier: 'PS-6',
    controlName: 'Access Agreements',
    description: 'Complete access agreements before authorizing access to organizational systems.',
    azureImplementation: 'This is a procedural control. Use Microsoft Forms or SharePoint to collect access agreements. Configure Azure AD conditional access to require agreement acceptance before first system access.',
    status: 'compliant',
    implementation: 'Digital access agreements implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Legal/Security',
    evidence: ['Access agreement forms', 'Conditional access policies'],
    riskLevel: 'low',
  },
  {
    id: 'PS-7',
    controlFamily: 'Personnel Security',
    controlIdentifier: 'PS-7',
    controlName: 'External Personnel Security',
    description: 'Establish personnel security requirements for external providers.',
    azureImplementation: 'Use Azure AD B2B for external partner access with guest user policies. Configure conditional access specifically for external users. Implement time-limited access through Azure AD entitlement management.',
    status: 'compliant',
    implementation: 'B2B guest access controls implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'External Relations',
    evidence: ['B2B configuration', 'Guest policies', 'Time-limited access'],
    riskLevel: 'low',
  },
  {
    id: 'PS-8',
    controlFamily: 'Personnel Security',
    controlIdentifier: 'PS-8',
    controlName: 'Personnel Sanctions',
    description: 'Employ a formal sanctions process for individuals failing to comply with security policies.',
    azureImplementation: 'This is a procedural control managed by HR. Use Azure Sentinel to detect and alert on policy violations. Configure automated responses for severe violations such as account suspension.',
    status: 'partial',
    implementation: 'Basic sanctions process, automated detection needed',
    lastAssessed: '2024-11-10',
    assessedBy: 'HR Security',
    evidence: ['HR procedures', 'Sentinel detection rules'],
    riskLevel: 'medium',
  },
  // Risk Assessment Controls
  {
    id: 'RA-1',
    controlFamily: 'Risk Assessment',
    controlIdentifier: 'RA-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate risk assessment policies and procedures.',
    azureImplementation: 'This is a procedural control. Develop formal risk assessment policies and procedures. Store in Azure Repos and use manual Azure Policy attestation to verify existence and compliance.',
    status: 'compliant',
    implementation: 'Risk assessment policies documented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Risk Manager',
    evidence: ['Policy documents', 'Assessment procedures'],
    riskLevel: 'low',
  },
  {
    id: 'RA-2',
    controlFamily: 'Risk Assessment',
    controlIdentifier: 'RA-2',
    controlName: 'Security Categorization',
    description: 'Categorize information and systems according to applicable laws, Executive Orders, directives, policies, regulations, standards, and operational requirements.',
    azureImplementation: 'Use Azure Resource Tags to implement FIPS 199 security categorization (Low, Moderate, High). Configure Azure Policy to enforce required categorization tags on all resources. Use Microsoft Purview for data classification.',
    status: 'partial',
    implementation: 'Resource tagging implemented, data classification in progress',
    lastAssessed: '2024-11-20',
    assessedBy: 'Data Classification Team',
    evidence: ['Resource tag policies', 'Purview configuration'],
    riskLevel: 'medium',
  },
  {
    id: 'RA-3',
    controlFamily: 'Risk Assessment',
    controlIdentifier: 'RA-3',
    controlName: 'Risk Assessment',
    description: 'Conduct an assessment of risk arising from the operation of organizational systems.',
    azureImplementation: 'Use Microsoft Defender for Cloud security assessments and recommendations. Configure Azure Sentinel for threat assessment. Implement third-party risk assessment tools integrated with Azure Monitor.',
    status: 'compliant',
    implementation: 'Automated risk assessment via Defender for Cloud',
    lastAssessed: '2024-12-01',
    assessedBy: 'Risk Assessment Team',
    evidence: ['Defender assessments', 'Sentinel analytics', 'Risk reports'],
    riskLevel: 'low',
  },
  {
    id: 'RA-5',
    controlFamily: 'Risk Assessment',
    controlIdentifier: 'RA-5',
    controlName: 'Vulnerability Monitoring and Scanning',
    description: 'Monitor and scan for vulnerabilities in organizational systems and applications.',
    azureImplementation: 'Use Microsoft Defender for Cloud for continuous vulnerability scanning. Configure Azure Security Center for container and VM vulnerability assessment. Implement Microsoft Defender for DevOps for application security scanning.',
    status: 'compliant',
    implementation: 'Comprehensive vulnerability scanning implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Vulnerability Management',
    evidence: ['Defender scan results', 'Security Center reports', 'DevOps scan integration'],
    riskLevel: 'low',
  },
  {
    id: 'RA-6',
    controlFamily: 'Risk Assessment',
    controlIdentifier: 'RA-6',
    controlName: 'Technical Surveillance Countermeasures Survey',
    description: 'Employ a technical surveillance countermeasures survey at organization-defined locations.',
    azureImplementation: 'This is primarily a physical security control. For cloud environments, use Azure Security Center IoT security monitoring and Azure Sphere for IoT device security. Monitor for unauthorized network connections.',
    status: 'not-assessed',
    implementation: 'Physical security control - not applicable to cloud',
    lastAssessed: '2024-12-01',
    assessedBy: 'Physical Security',
    evidence: ['IoT monitoring setup'],
    riskLevel: 'low',
  },
  // System Acquisition, Development, and Maintenance Controls
  {
    id: 'SA-1',
    controlFamily: 'System and Services Acquisition',
    controlIdentifier: 'SA-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate system and services acquisition policies and procedures.',
    azureImplementation: 'This is a procedural control. Develop formal acquisition policies covering cloud services procurement and security requirements. Store in Azure Repos with manual Azure Policy attestation.',
    status: 'compliant',
    implementation: 'Acquisition policies documented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Procurement/Security',
    evidence: ['Policy documents', 'Acquisition procedures'],
    riskLevel: 'low',
  },
  {
    id: 'SA-2',
    controlFamily: 'System and Services Acquisition',
    controlIdentifier: 'SA-2',
    controlName: 'Allocation of Resources',
    description: 'Determine the high-level information security requirements for the system or system service in mission/business process planning.',
    azureImplementation: 'Use Azure Cost Management for resource allocation tracking. Implement Azure Policy to enforce resource limits and security requirements. Configure Azure Resource Manager templates with security baselines.',
    status: 'compliant',
    implementation: 'Resource allocation with security controls',
    lastAssessed: '2024-12-01',
    assessedBy: 'Cloud Architect',
    evidence: ['Cost Management reports', 'Policy assignments', 'ARM templates'],
    riskLevel: 'low',
  },
  {
    id: 'SA-3',
    controlFamily: 'System and Services Acquisition',
    controlIdentifier: 'SA-3',
    controlName: 'System Development Life Cycle',
    description: 'Acquire, develop, and manage systems using a system development life cycle that incorporates information security considerations.',
    azureImplementation: 'Implement DevSecOps using Azure DevOps with integrated security scanning. Use Microsoft Defender for DevOps for security throughout SDLC. Configure security gates in CI/CD pipelines.',
    status: 'compliant',
    implementation: 'DevSecOps implemented with security gates',
    lastAssessed: '2024-12-01',
    assessedBy: 'DevOps Security',
    evidence: ['DevOps pipeline configuration', 'Security scan results', 'SDLC documentation'],
    riskLevel: 'low',
  },
  {
    id: 'SA-4',
    controlFamily: 'System and Services Acquisition',
    controlIdentifier: 'SA-4',
    controlName: 'Acquisition Process',
    description: 'Include security and privacy requirements in the acquisition process.',
    azureImplementation: 'This is a procedural control. Develop security requirements for cloud service acquisitions. Use Azure Security Benchmark as baseline requirements. Include compliance requirements in procurement processes.',
    status: 'compliant',
    implementation: 'Security requirements in acquisition process',
    lastAssessed: '2024-12-01',
    assessedBy: 'Procurement Security',
    evidence: ['Security requirements templates', 'Procurement procedures'],
    riskLevel: 'low',
  },
  {
    id: 'SA-5',
    controlFamily: 'System and Services Acquisition',
    controlIdentifier: 'SA-5',
    controlName: 'System Documentation',
    description: 'Obtain or develop administrator and user documentation for systems, system components, or system services.',
    azureImplementation: 'Use Azure DevOps Wiki or GitHub for technical documentation. Implement documentation as code practices. Configure automated documentation generation from ARM templates and Terraform code.',
    status: 'partial',
    implementation: 'Technical documentation in DevOps, user docs needed',
    lastAssessed: '2024-11-15',
    assessedBy: 'Technical Writing',
    evidence: ['DevOps documentation', 'ARM template docs'],
    riskLevel: 'medium',
  },
  {
    id: 'SA-8',
    controlFamily: 'System and Services Acquisition',
    controlIdentifier: 'SA-8',
    controlName: 'Security and Privacy Engineering Principles',
    description: 'Apply systems security and privacy engineering principles in the specification, design, development, implementation, and modification of systems.',
    azureImplementation: 'Use Azure Well-Architected Framework security pillar. Implement security by design principles in Azure Architecture. Configure Azure Security Center recommendations and Azure Advisor security guidance.',
    status: 'compliant',
    implementation: 'Well-Architected Framework implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Solution Architect',
    evidence: ['Architecture reviews', 'Security Center compliance', 'Advisor recommendations'],
    riskLevel: 'low',
  },
  {
    id: 'SA-9',
    controlFamily: 'System and Services Acquisition',
    controlIdentifier: 'SA-9',
    controlName: 'External System Services',
    description: 'Require that providers of external system services comply with organizational security and privacy requirements.',
    azureImplementation: 'Use Microsoft Service Trust Portal for Azure compliance verification. Implement Azure Policy to enforce approved service usage. Configure Microsoft Defender for Cloud Apps for external service monitoring.',
    status: 'compliant',
    implementation: 'External service compliance monitoring',
    lastAssessed: '2024-12-01',
    assessedBy: 'Third Party Risk',
    evidence: ['Service Trust Portal verification', 'Cloud Apps monitoring', 'Policy compliance'],
    riskLevel: 'low',
  },
  {
    id: 'SA-10',
    controlFamily: 'System and Services Acquisition',
    controlIdentifier: 'SA-10',
    controlName: 'Developer Configuration Management',
    description: 'Require the developer to perform configuration management during system, system component, or system service development.',
    azureImplementation: 'Use Azure DevOps or GitHub for source code management. Implement branch protection policies and required reviews. Configure automated build and deployment pipelines with security scanning.',
    status: 'compliant',
    implementation: 'Configuration management in DevOps',
    lastAssessed: '2024-12-01',
    assessedBy: 'Development Team',
    evidence: ['Source control policies', 'Branch protection', 'Pipeline configuration'],
    riskLevel: 'low',
  },
  {
    id: 'SA-11',
    controlFamily: 'System and Services Acquisition',
    controlIdentifier: 'SA-11',
    controlName: 'Developer Testing and Evaluation',
    description: 'Require the developer to create and implement a security and privacy test and evaluation plan.',
    azureImplementation: 'Implement automated security testing in Azure DevOps pipelines. Use Microsoft Defender for DevOps for SAST/DAST scanning. Configure Azure Load Testing for performance and security testing.',
    status: 'compliant',
    implementation: 'Automated security testing implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'QA Security',
    evidence: ['Security test results', 'Defender for DevOps scans', 'Load testing reports'],
    riskLevel: 'low',
  },
  // Planning Controls
  {
    id: 'PL-1',
    controlFamily: 'Planning',
    controlIdentifier: 'PL-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate planning policies and procedures.',
    azureImplementation: 'This is a procedural control. Develop formal system planning policies covering security planning and system security plans. Store in Azure Repos with manual Azure Policy attestation.',
    status: 'compliant',
    implementation: 'Planning policies documented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Planning Team',
    evidence: ['Policy documents', 'Planning procedures'],
    riskLevel: 'low',
  },
  {
    id: 'PL-2',
    controlFamily: 'Planning',
    controlIdentifier: 'PL-2',
    controlName: 'System Security Plan',
    description: 'Develop a security plan for the system that is consistent with the organization enterprise architecture.',
    azureImplementation: 'This is a procedural control. Develop comprehensive system security plans for each Azure deployment. Use Azure Architecture Center guidance and store plans in Azure Repos with version control.',
    status: 'compliant',
    implementation: 'System security plans documented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Architect',
    evidence: ['Security plan documents', 'Architecture documentation'],
    riskLevel: 'low',
  },
  {
    id: 'PL-4',
    controlFamily: 'Planning',
    controlIdentifier: 'PL-4',
    controlName: 'Rules of Behavior',
    description: 'Establish and make readily available to individuals requiring access to the system the rules that describe their responsibilities and expected behavior.',
    azureImplementation: 'This is a procedural control. Develop rules of behavior for system users. Use SharePoint for document distribution and Azure AD conditional access to require acknowledgment before system access.',
    status: 'compliant',
    implementation: 'Rules of behavior with digital acknowledgment',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Awareness',
    evidence: ['Rules of behavior document', 'Conditional access policies'],
    riskLevel: 'low',
  },
  {
    id: 'PL-8',
    controlFamily: 'Planning',
    controlIdentifier: 'PL-8',
    controlName: 'Security and Privacy Architectures',
    description: 'Develop security and privacy architectures for the system that describe the requirements and approach to be taken.',
    azureImplementation: 'Use Azure Architecture Center patterns for security architecture. Implement Azure Landing Zones for standardized security architecture. Document security architecture in Azure DevOps or GitHub.',
    status: 'compliant',
    implementation: 'Security architecture using Landing Zones',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Architect',
    evidence: ['Landing Zone implementation', 'Architecture documentation', 'Security patterns'],
    riskLevel: 'low',
  },
  {
    id: 'PL-9',
    controlFamily: 'Planning',
    controlIdentifier: 'PL-9',
    controlName: 'Central Management',
    description: 'Centrally manage planned security and privacy control implementations.',
    azureImplementation: 'Use Azure Policy for centralized security control management. Implement Azure Management Groups for hierarchical policy assignment. Configure Azure Security Center for centralized security management.',
    status: 'compliant',
    implementation: 'Centralized management via Azure Policy',
    lastAssessed: '2024-12-01',
    assessedBy: 'Cloud Operations',
    evidence: ['Policy assignments', 'Management Groups', 'Security Center configuration'],
    riskLevel: 'low',
  },
  // Program Management Controls
  {
    id: 'PM-1',
    controlFamily: 'Program Management',
    controlIdentifier: 'PM-1',
    controlName: 'Information Security Program Plan',
    description: 'Develop and disseminate an organization-wide information security program plan.',
    azureImplementation: 'This is a procedural control. Develop comprehensive information security program plan including Azure cloud security strategy. Store in Azure Repos and use manual Azure Policy attestation.',
    status: 'compliant',
    implementation: 'Security program plan documented',
    lastAssessed: '2024-12-01',
    assessedBy: 'CISO',
    evidence: ['Security program plan', 'Cloud security strategy'],
    riskLevel: 'low',
  },
  {
    id: 'PM-2',
    controlFamily: 'Program Management',
    controlIdentifier: 'PM-2',
    controlName: 'Information Security Program Leadership Role',
    description: 'Appoint a senior agency information security officer with the mission and resources to coordinate, develop, implement, and maintain an organization-wide information security program.',
    azureImplementation: 'This is an organizational control. Ensure CISO or equivalent role is designated with authority over cloud security program. Document roles and responsibilities in organizational charts.',
    status: 'compliant',
    implementation: 'CISO role established with cloud authority',
    lastAssessed: '2024-12-01',
    assessedBy: 'Executive Leadership',
    evidence: ['Organizational chart', 'Role definitions'],
    riskLevel: 'low',
  },
  {
    id: 'PM-3',
    controlFamily: 'Program Management',
    controlIdentifier: 'PM-3',
    controlName: 'Information Security and Privacy Resources',
    description: 'Include the resources needed to implement the information security and privacy programs in capital planning and investment requests.',
    azureImplementation: 'This is a procedural control. Include Azure security tool licensing and staffing in budget planning. Use Azure Cost Management for security service cost tracking and planning.',
    status: 'compliant',
    implementation: 'Security resources in capital planning',
    lastAssessed: '2024-12-01',
    assessedBy: 'Financial Planning',
    evidence: ['Budget documentation', 'Cost Management reports'],
    riskLevel: 'low',
  },
  // Media Protection Controls
  {
    id: 'MP-1',
    controlFamily: 'Media Protection',
    controlIdentifier: 'MP-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate media protection policies and procedures.',
    azureImplementation: 'This is a procedural control. Develop policies for cloud storage media protection and data handling. Store in Azure Repos with manual Azure Policy attestation.',
    status: 'compliant',
    implementation: 'Media protection policies documented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Data Protection',
    evidence: ['Policy documents', 'Data handling procedures'],
    riskLevel: 'low',
  },
  {
    id: 'MP-2',
    controlFamily: 'Media Protection',
    controlIdentifier: 'MP-2',
    controlName: 'Media Access',
    description: 'Restrict access to digital and non-digital media to authorized individuals.',
    azureImplementation: 'Use Azure Storage RBAC for media access control. Configure Azure Blob Storage with appropriate access tiers and policies. Implement Azure Key Vault for media encryption key management.',
    status: 'compliant',
    implementation: 'Storage RBAC with encryption implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Storage Security',
    evidence: ['Storage access policies', 'RBAC assignments', 'Encryption configuration'],
    riskLevel: 'low',
  },
  {
    id: 'MP-6',
    controlFamily: 'Media Protection',
    controlIdentifier: 'MP-6',
    controlName: 'Media Sanitization',
    description: 'Sanitize media prior to disposal, release out of organizational control, or release for reuse.',
    azureImplementation: 'Azure handles physical media sanitization. For customer data, use Azure Storage secure deletion and Azure Disk Encryption. Implement data retention policies and automated deletion using Azure Policy.',
    status: 'compliant',
    implementation: 'Automated secure deletion policies',
    lastAssessed: '2024-12-01',
    assessedBy: 'Data Lifecycle',
    evidence: ['Retention policies', 'Secure deletion logs', 'Azure Policy assignments'],
    riskLevel: 'low',
  },
  // Physical and Environmental Protection Controls
  {
    id: 'PE-1',
    controlFamily: 'Physical and Environmental Protection',
    controlIdentifier: 'PE-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate physical and environmental protection policies and procedures.',
    azureImplementation: 'For cloud environments, rely on Azure datacenter physical security. Develop policies for on-premises components and remote work. Document reliance on Azure SOC compliance.',
    status: 'compliant',
    implementation: 'Physical security policies with cloud delegation',
    lastAssessed: '2024-12-01',
    assessedBy: 'Facilities Security',
    evidence: ['Policy documents', 'Azure SOC reports'],
    riskLevel: 'low',
  },
  {
    id: 'PE-2',
    controlFamily: 'Physical and Environmental Protection',
    controlIdentifier: 'PE-2',
    controlName: 'Physical Access Authorizations',
    description: 'Develop, approve, and maintain a list of individuals with authorized access to the facility where the system resides.',
    azureImplementation: 'For cloud services, this is inherited from Azure datacenter controls. For on-premises or hybrid components, use Azure AD to manage facility access lists and integrate with physical access control systems.',
    status: 'compliant',
    implementation: 'Cloud inherited, on-premises Azure AD integrated',
    lastAssessed: '2024-12-01',
    assessedBy: 'Physical Security',
    evidence: ['Azure compliance documentation', 'On-premises access lists'],
    riskLevel: 'low',
  },
  {
    id: 'PE-3',
    controlFamily: 'Physical and Environmental Protection',
    controlIdentifier: 'PE-3',
    controlName: 'Physical Access Control',
    description: 'Enforce physical access authorizations at entry and exit points to the facility.',
    azureImplementation: 'Inherited from Azure datacenter physical security controls. For on-premises components, integrate physical access control systems with Azure AD for centralized identity management.',
    status: 'compliant',
    implementation: 'Cloud inherited, on-premises integrated',
    lastAssessed: '2024-12-01',
    assessedBy: 'Physical Security',
    evidence: ['Azure datacenter audits', 'Physical access integration'],
    riskLevel: 'low',
  },
  // Awareness and Training Controls
  {
    id: 'AT-1',
    controlFamily: 'Awareness and Training',
    controlIdentifier: 'AT-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate awareness and training policies and procedures.',
    azureImplementation: 'This is a procedural control. Develop formal security awareness and training policies. Store in Azure Repos and track training completion using Azure DevOps or Microsoft Learn.',
    status: 'compliant',
    implementation: 'Training policies documented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Training Manager',
    evidence: ['Training policy documents', 'Procedure guides'],
    riskLevel: 'low',
  },
  {
    id: 'AT-2',
    controlFamily: 'Awareness and Training',
    controlIdentifier: 'AT-2',
    controlName: 'Literacy Training and Awareness',
    description: 'Provide literacy training and awareness to system users.',
    azureImplementation: 'Use Microsoft Learn for Azure security training. Implement Microsoft Viva Learning for organization-wide security awareness. Configure training tracking and completion reporting.',
    status: 'partial',
    implementation: 'Microsoft Learn implemented, comprehensive program needed',
    lastAssessed: '2024-11-15',
    assessedBy: 'Training Team',
    evidence: ['Microsoft Learn deployment', 'Training completion reports'],
    riskLevel: 'medium',
  },
  {
    id: 'AT-3',
    controlFamily: 'Awareness and Training',
    controlIdentifier: 'AT-3',
    controlName: 'Role-Based Training',
    description: 'Provide role-based security and privacy training to personnel with security responsibilities.',
    azureImplementation: 'Use Microsoft Learn role-based learning paths for Azure administrators. Implement specialized security training for different roles. Track completion using Azure DevOps or Learning Management Systems.',
    status: 'partial',
    implementation: 'Basic role-based training, advanced paths needed',
    lastAssessed: '2024-11-20',
    assessedBy: 'Role Training',
    evidence: ['Learning path assignments', 'Completion tracking'],
    riskLevel: 'medium',
  },
  {
    id: 'AT-4',
    controlFamily: 'Awareness and Training',
    controlIdentifier: 'AT-4',
    controlName: 'Training Records',
    description: 'Document and monitor individual training activities.',
    azureImplementation: 'Use Azure DevOps or SharePoint to maintain training records. Integrate with Microsoft Learn for automated completion tracking. Implement reporting dashboards using Power BI.',
    status: 'compliant',
    implementation: 'Automated training record tracking',
    lastAssessed: '2024-12-01',
    assessedBy: 'Training Administration',
    evidence: ['Training database', 'Completion reports', 'Power BI dashboards'],
    riskLevel: 'low',
  },
  // Maintenance Controls
  {
    id: 'MA-1',
    controlFamily: 'Maintenance',
    controlIdentifier: 'MA-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate maintenance policies and procedures.',
    azureImplementation: 'This is a procedural control. Develop maintenance policies for cloud and on-premises systems. For Azure services, document reliance on Microsoft maintenance procedures and SLAs.',
    status: 'compliant',
    implementation: 'Maintenance policies with cloud SLA documentation',
    lastAssessed: '2024-12-01',
    assessedBy: 'Operations Manager',
    evidence: ['Maintenance policy documents', 'Azure SLA documentation'],
    riskLevel: 'low',
  },
  {
    id: 'MA-2',
    controlFamily: 'Maintenance',
    controlIdentifier: 'MA-2',
    controlName: 'Controlled Maintenance',
    description: 'Schedule, document, and review records of maintenance and repairs on system components.',
    azureImplementation: 'Use Azure Update Management for VM patch maintenance. Configure Azure Automation for scheduled maintenance tasks. Track maintenance activities using Azure Monitor and Azure DevOps.',
    status: 'compliant',
    implementation: 'Automated maintenance with Azure Update Management',
    lastAssessed: '2024-12-01',
    assessedBy: 'System Administration',
    evidence: ['Update Management logs', 'Automation runbooks', 'Maintenance schedules'],
    riskLevel: 'low',
  },
  {
    id: 'MA-3',
    controlFamily: 'Maintenance',
    controlIdentifier: 'MA-3',
    controlName: 'Maintenance Tools',
    description: 'Approve, control, and monitor the use of system maintenance tools.',
    azureImplementation: 'Use Azure RBAC to control access to maintenance tools. Configure Azure Policy to restrict unauthorized tool installation. Monitor tool usage through Azure Monitor and Azure Sentinel.',
    status: 'compliant',
    implementation: 'RBAC-controlled maintenance tools',
    lastAssessed: '2024-12-01',
    assessedBy: 'Tool Administration',
    evidence: ['RBAC policies', 'Tool inventory', 'Usage monitoring'],
    riskLevel: 'low',
  },
  {
    id: 'MA-4',
    controlFamily: 'Maintenance',
    controlIdentifier: 'MA-4',
    controlName: 'Nonlocal Maintenance',
    description: 'Approve and monitor nonlocal maintenance and diagnostic activities.',
    azureImplementation: 'Use Azure Bastion for secure remote access to VMs. Configure Azure VPN Gateway for site-to-site maintenance connections. Monitor remote sessions through Azure Monitor and log analytics.',
    status: 'compliant',
    implementation: 'Secure remote maintenance via Bastion',
    lastAssessed: '2024-12-01',
    assessedBy: 'Remote Access Team',
    evidence: ['Bastion configuration', 'VPN logs', 'Session monitoring'],
    riskLevel: 'low',
  },
  {
    id: 'MA-5',
    controlFamily: 'Maintenance',
    controlIdentifier: 'MA-5',
    controlName: 'Maintenance Personnel',
    description: 'Establish a process for maintenance personnel authorization.',
    azureImplementation: 'Use Azure AD groups for maintenance personnel. Configure Azure PIM for just-in-time maintenance access. Implement approval workflows for maintenance activities using Azure DevOps.',
    status: 'compliant',
    implementation: 'Azure AD groups with PIM for maintenance',
    lastAssessed: '2024-12-01',
    assessedBy: 'Access Management',
    evidence: ['Azure AD group configuration', 'PIM policies', 'Approval workflows'],
    riskLevel: 'low',
  },
  {
    id: 'MA-6',
    controlFamily: 'Maintenance',
    controlIdentifier: 'MA-6',
    controlName: 'Timely Maintenance',
    description: 'Obtain maintenance support and spare parts for system components.',
    azureImplementation: 'For Azure services, maintenance is included in the service. For on-premises components, maintain support contracts and spare parts inventory. Use Azure Cost Management for support cost tracking.',
    status: 'compliant',
    implementation: 'Cloud maintenance included, on-premises contracts maintained',
    lastAssessed: '2024-12-01',
    assessedBy: 'Support Management',
    evidence: ['Azure service agreements', 'Support contracts', 'Inventory records'],
    riskLevel: 'low',
  },
];

// Group controls by family for easier access
export const controlFamilies = [
  {
    id: 'AC',
    name: 'Access Control',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Access Control').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Access Control' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Access Control' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Access Control' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Access Control'),
  },
  {
    id: 'AT',
    name: 'Awareness and Training',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Awareness and Training').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Awareness and Training' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Awareness and Training' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Awareness and Training' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Awareness and Training'),
  },
  {
    id: 'AU',
    name: 'Audit and Accountability',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Audit and Accountability').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Audit and Accountability' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Audit and Accountability' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Audit and Accountability' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Audit and Accountability'),
  },
  {
    id: 'CA',
    name: 'Assessment, Authorization, and Monitoring',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Assessment, Authorization, and Monitoring').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Assessment, Authorization, and Monitoring' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Assessment, Authorization, and Monitoring' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Assessment, Authorization, and Monitoring' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Assessment, Authorization, and Monitoring'),
  },
  {
    id: 'CM',
    name: 'Configuration Management',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Configuration Management').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Configuration Management' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Configuration Management' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Configuration Management' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Configuration Management'),
  },
  {
    id: 'CP',
    name: 'Contingency Planning',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Contingency Planning').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Contingency Planning' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Contingency Planning' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Contingency Planning' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Contingency Planning'),
  },
  {
    id: 'IA',
    name: 'Identification and Authentication',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Identification and Authentication').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Identification and Authentication' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Identification and Authentication' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Identification and Authentication' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Identification and Authentication'),
  },
  {
    id: 'IR',
    name: 'Incident Response',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Incident Response').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Incident Response' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Incident Response' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Incident Response' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Incident Response'),
  },
  {
    id: 'MA',
    name: 'Maintenance',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Maintenance').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Maintenance' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Maintenance' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Maintenance' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Maintenance'),
  },
  {
    id: 'MP',
    name: 'Media Protection',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Media Protection').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Media Protection' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Media Protection' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Media Protection' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Media Protection'),
  },
  {
    id: 'PE',
    name: 'Physical and Environmental Protection',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Physical and Environmental Protection').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Physical and Environmental Protection' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Physical and Environmental Protection' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Physical and Environmental Protection' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Physical and Environmental Protection'),
  },
  {
    id: 'PL',
    name: 'Planning',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Planning').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Planning' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Planning' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Planning' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Planning'),
  },
  {
    id: 'PM',
    name: 'Program Management',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Program Management').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Program Management' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Program Management' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Program Management' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Program Management'),
  },
  {
    id: 'PS',
    name: 'Personnel Security',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Personnel Security').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Personnel Security' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Personnel Security' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Personnel Security' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Personnel Security'),
  },
  {
    id: 'RA',
    name: 'Risk Assessment',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'Risk Assessment').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Risk Assessment' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'Risk Assessment' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'Risk Assessment' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Risk Assessment'),
  },
  {
    id: 'SA',
    name: 'System and Services Acquisition',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Services Acquisition').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Services Acquisition' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Services Acquisition' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Services Acquisition' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Services Acquisition'),
  },
  {
    id: 'SC',
    name: 'System and Communications Protection',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Communications Protection').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Communications Protection' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Communications Protection' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Communications Protection' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Communications Protection'),
  },
  {
    id: 'SI',
    name: 'System and Information Integrity',
    total: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Information Integrity').length,
    compliant: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Information Integrity' && c.status === 'compliant').length,
    partial: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Information Integrity' && c.status === 'partial').length,
    noncompliant: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Information Integrity' && c.status === 'noncompliant').length,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'System and Information Integrity'),
  },
];

// Calculate overall compliance metrics
export const overallMetrics = {
  total: nistControlsFromCSV.length,
  compliant: nistControlsFromCSV.filter(c => c.status === 'compliant').length,
  partial: nistControlsFromCSV.filter(c => c.status === 'partial').length,
  noncompliant: nistControlsFromCSV.filter(c => c.status === 'noncompliant').length,
  compliancePercentage: Math.round(
    (nistControlsFromCSV.filter(c => c.status === 'compliant').length / nistControlsFromCSV.length) * 100
  ),
};
