/* Enhanced NIST control data based on comprehensive CSV with descriptions and Azure implementations */
import type { NISTControl } from '../services/cosmosService';

export const nistControlsFromCSV: NISTControl[] = [
  {
    id: 'AC-1',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate access control policies and procedures.',
    azureImplementation: 'This is a procedural control. The organization must develop a formal Access Control Policy. This policy should be stored in a version-controlled repository like Azure Repos, and its existence can be attested to using manual Azure Policy definitions (e.g., CMA_0144).',
    status: 'partial',
    implementation: 'Azure AD policies documented',
    lastAssessed: '2024-12-01',
    assessedBy: 'System Administrator',
    evidence: ['Policy document in Azure Repos', 'Manual Azure Policy attestation'],
    riskLevel: 'medium',
  },
  {
    id: 'AC-2',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-2',
    controlName: 'Account Management',
    description: 'Manage the lifecycle of system accounts (creation, modification, disabling, removal).',
    azureImplementation: 'Implement Microsoft Entra ID Governance. Use Lifecycle Workflows to automate Joiner-Mover-Leaver (JML) processes based on an HR system of record. Use Microsoft Entra Access Reviews to periodically recertify access to critical applications and privileged groups.',
    status: 'compliant',
    implementation: 'Automated via Azure AD with Lifecycle Workflows',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Analyst',
    evidence: ['Entra ID Governance configuration', 'Access review reports'],
    riskLevel: 'low',
  },
  {
    id: 'AC-3',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-3',
    controlName: 'Access Enforcement',
    description: 'Enforce approved authorizations for logical access to information and system resources.',
    azureImplementation: 'Implement Microsoft Entra Conditional Access policies to enforce access controls based on user, device, location, and risk signals. Use Azure Role-Based Access Control (RBAC) with the principle of least privilege for managing Azure resources.',
    status: 'partial',
    implementation: 'RBAC partially implemented, Conditional Access in progress',
    lastAssessed: '2024-11-15',
    assessedBy: 'Security Analyst',
    evidence: ['Conditional Access policies', 'RBAC assignments'],
    riskLevel: 'medium',
    poamItems: ['POAM-001'],
  },
  {
    id: 'AC-4',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-4',
    controlName: 'Information Flow Enforcement',
    description: 'Enforce approved authorizations for controlling the flow of information within and between systems.',
    azureImplementation: 'Implement a hub-spoke network topology with Azure Firewall in the hub for centralized traffic inspection. Use Network Security Groups (NSGs) for micro-segmentation between subnets. Secure PaaS services with Azure Private Link to prevent data exfiltration over the public internet.',
    status: 'noncompliant',
    implementation: 'Network segmentation needed',
    lastAssessed: '2024-10-01',
    assessedBy: 'Network Engineer',
    evidence: [],
    riskLevel: 'high',
    poamItems: ['POAM-002'],
  },
  {
    id: 'AC-5',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-5',
    controlName: 'Separation of Duties',
    description: 'Identify and document duties of individuals requiring separation and define system access authorizations to support this separation.',
    azureImplementation: 'Use custom Azure RBAC roles to separate conflicting duties (e.g., a "Developer" role cannot approve its own deployments). Use Azure Policy to audit for potential violations, such as a single user having both "Contributor" and "Security Admin" roles.',
    status: 'compliant',
    implementation: 'Privileged Identity Management with custom roles',
    lastAssessed: '2024-11-20',
    assessedBy: 'Compliance Officer',
    evidence: ['Custom RBAC roles', 'Azure Policy compliance reports'],
    riskLevel: 'low',
  },
  {
    id: 'AC-6',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-6',
    controlName: 'Least Privilege',
    description: 'Employ the principle of least privilege, allowing only necessary authorized accesses.',
    azureImplementation: 'Implement Microsoft Entra Privileged Identity Management (PIM) to provide just-in-time (JIT) access to privileged roles. Convert all standing privileged access to "eligible" assignments that require activation with MFA and justification.',
    status: 'compliant',
    implementation: 'PIM with JIT access implemented',
    lastAssessed: '2024-12-01',
    assessedBy: 'Security Analyst',
    evidence: ['PIM configuration', 'JIT access reports'],
    riskLevel: 'low',
  },
  {
    id: 'AC-7',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-7',
    controlName: 'Unsuccessful Logon Attempts',
    description: 'Limit consecutive invalid logon attempts and take action when the limit is exceeded.',
    azureImplementation: 'Leverage the built-in Microsoft Entra ID Smart Lockout feature, which uses risk-based intelligence to lock out attackers while avoiding locking out legitimate users. For IaaS VMs, configure account lockout policies via Group Policy (Windows) or PAM (Linux).',
    status: 'compliant',
    implementation: 'Smart Lockout enabled',
    lastAssessed: '2024-11-15',
    assessedBy: 'Security Engineer',
    evidence: ['Smart Lockout configuration', 'VM lockout policies'],
    riskLevel: 'low',
  },
  {
    id: 'AC-8',
    controlFamily: 'Access Control',
    controlIdentifier: 'AC-8',
    controlName: 'System Use Notification',
    description: 'Display a system use notification message before granting access.',
    azureImplementation: 'Configure a "Terms of Use" policy in Microsoft Entra Conditional Access. This will require all users to view and accept the defined notification banner before completing sign-in to any Azure-integrated application.',
    status: 'compliant',
    implementation: 'Terms of Use in Conditional Access',
    lastAssessed: '2024-11-10',
    assessedBy: 'Legal/Compliance',
    evidence: ['Terms of Use policy', 'User acceptance logs'],
    riskLevel: 'low',
  },
  {
    id: 'AU-1',
    controlFamily: 'Audit and Accountability',
    controlIdentifier: 'AU-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate an audit and accountability policy and procedures.',
    azureImplementation: 'This is a procedural control. The organization must develop a formal Audit and Accountability Policy. Store the document in Azure Repos and use manual Azure Policy definitions (e.g., CMA_0154) to attest to its existence and review.',
    status: 'compliant',
    implementation: 'Audit policies documented and approved',
    lastAssessed: '2024-12-01',
    assessedBy: 'Compliance Officer',
    evidence: ['Audit policy document', 'Management approval'],
    riskLevel: 'low',
  },
  {
    id: 'AU-2',
    controlFamily: 'Audit and Accountability',
    controlIdentifier: 'AU-2',
    controlName: 'Event Logging',
    description: 'Identify and log specific event types to support incident investigations.',
    azureImplementation: 'Deploy a central Azure Log Analytics workspace. Use Azure Policy to enforce that Diagnostic Settings are enabled for all Azure resources, forwarding logs to the central workspace. Enable Microsoft Sentinel data connectors for Microsoft Entra ID, Microsoft 365, and other critical services.',
    status: 'compliant',
    implementation: 'Central Log Analytics with comprehensive logging',
    lastAssessed: '2024-11-25',
    assessedBy: 'Security Operations',
    evidence: ['Log Analytics workspace', 'Diagnostic Settings policies', 'Sentinel connectors'],
    riskLevel: 'low',
  },
  {
    id: 'AU-3',
    controlFamily: 'Audit and Accountability',
    controlIdentifier: 'AU-3',
    controlName: 'Content of Audit Records',
    description: 'Ensure audit records contain sufficient information to establish what, when, where, who, source, and outcome.',
    azureImplementation: 'This is met by the native logging capabilities of Azure services. Azure Activity Logs and Microsoft Entra ID logs are structured to include the required information by default. The primary task is to ensure these logs are collected as described in AU-2.',
    status: 'compliant',
    implementation: 'Native Azure logging with structured formats',
    lastAssessed: '2024-11-20',
    assessedBy: 'Security Analyst',
    evidence: ['Log format documentation', 'Sample audit records'],
    riskLevel: 'low',
  },
  {
    id: 'AU-4',
    controlFamily: 'Audit and Accountability',
    controlIdentifier: 'AU-4',
    controlName: 'Audit Record Retention',
    description: 'Retain audit records for a defined time period.',
    azureImplementation: 'Configure the data retention period on the central Log Analytics Workspace (e.g., 90 days for hot data). For long-term retention, configure data export from Log Analytics to an Azure Storage account with an immutability policy (WORM) enabled.',
    status: 'compliant',
    implementation: 'Log Analytics retention with long-term archival',
    lastAssessed: '2024-11-15',
    assessedBy: 'Data Management',
    evidence: ['Retention policies', 'WORM storage configuration'],
    riskLevel: 'low',
  },
  {
    id: 'CA-1',
    controlFamily: 'Assessment, Authorization, and Monitoring',
    controlIdentifier: 'CA-1',
    controlName: 'Policy and Procedures',
    description: 'Develop, document, and disseminate an assessment, authorization, and monitoring policy and procedures.',
    azureImplementation: 'This is a procedural control. The organization must develop a formal policy for its Risk Management Framework (RMF) process. Store the document in Azure Repos and use manual Azure Policy definitions (e.g., CMA_0477) to attest to its existence and review.',
    status: 'compliant',
    implementation: 'RMF policy documented and approved',
    lastAssessed: '2024-12-01',
    assessedBy: 'Risk Manager',
    evidence: ['RMF policy document', 'Approval documentation'],
    riskLevel: 'low',
  },
  {
    id: 'CA-2',
    controlFamily: 'Assessment, Authorization, and Monitoring',
    controlIdentifier: 'CA-2',
    controlName: 'Control Assessments',
    description: 'Develop a control assessment plan and conduct assessments of security and privacy controls.',
    azureImplementation: 'Assign the built-in "NIST SP 800-53 Rev. 5" regulatory compliance initiative in Azure Policy. The results are aggregated in the Microsoft Defender for Cloud regulatory compliance dashboard, providing a continuous, automated assessment of technical controls.',
    status: 'compliant',
    implementation: 'Automated assessment via Defender for Cloud',
    lastAssessed: '2024-11-30',
    assessedBy: 'Security Team',
    evidence: ['Azure Policy compliance dashboard', 'Assessment reports'],
    riskLevel: 'low',
  },
  {
    id: 'CA-3',
    controlFamily: 'Assessment, Authorization, and Monitoring',
    controlIdentifier: 'CA-3',
    controlName: 'Information Exchange',
    description: 'Approve and manage the exchange of information between systems using formal agreements.',
    azureImplementation: 'This is a procedural and contractual control. For every external system connection, an Interconnection Security Agreement (ISA) must be established. Use manual Azure Policy controls (e.g., CMA_0435) to attest that these agreements are in place.',
    status: 'partial',
    implementation: 'ISAs in development for some connections',
    lastAssessed: '2024-10-15',
    assessedBy: 'Legal/Security',
    evidence: ['Draft ISA documents'],
    riskLevel: 'medium',
    poamItems: ['POAM-003'],
  },
];

// Group controls by family for easier access
export const controlFamilies = [
  {
    id: 'AC',
    name: 'Access Control',
    total: 8,
    compliant: 5,
    partial: 2,
    noncompliant: 1,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Access Control'),
  },
  {
    id: 'AU',
    name: 'Audit and Accountability',
    total: 4,
    compliant: 4,
    partial: 0,
    noncompliant: 0,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Audit and Accountability'),
  },
  {
    id: 'CA',
    name: 'Assessment, Authorization, and Monitoring',
    total: 3,
    compliant: 2,
    partial: 1,
    noncompliant: 0,
    controls: nistControlsFromCSV.filter(c => c.controlFamily === 'Assessment, Authorization, and Monitoring'),
  },
];

// Calculate overall compliance metrics
export const overallMetrics = {
  total: nistControlsFromCSV.length,
  compliant: nistControlsFromCSV.filter(c => c.status === 'compliant').length,
  partial: nistControlsFromCSV.filter(c => c.status === 'partial').length,
  noncompliant: nistControlsFromCSV.filter(c => c.status === 'noncompliant').length,
  compliancePercentage: Math.round(
    (nistControlsFromCSV.filter(c => c.status === 'compliant').length / nistControlsFromCSV.length) * 100
  ),
};
