# üîê AUTHENTICATION CONFIGURATION
# ==========================================

# LOCAL AUTHENTICATION MODE (for easy testing without Azure setup)
# Set to 'true' to use simple username/password login instead of Azure Entra ID
# Test accounts: admin/admin123, security/security123, compliance/compliance123, etc.
VITE_USE_LOCAL_AUTH=true

# AZURE ENTRA ID CONFIGURATION (when VITE_USE_LOCAL_AUTH=false)
# ==========================================
# CRITICAL: You MUST update these values for Azure authentication to work
# Get these from: Azure Portal ‚Üí App registrations ‚Üí Your app ‚Üí Overview

# Your Application (client) ID from Azure App Registration
# Example format: 12345678-1234-1234-1234-123456789012
VITE_AZURE_CLIENT_ID=your-azure-client-id-here

# Your Directory (tenant) ID from Azure App Registration  
# Format: https://login.microsoftonline.com/YOUR-TENANT-ID
# Example: https://login.microsoftonline.com/87654321-4321-4321-4321-210987654321
VITE_AZURE_AUTHORITY=https://login.microsoftonline.com/your-tenant-id-here

# Local development redirect URIs (these should match your Azure App Registration)
VITE_REDIRECT_URI=http://localhost:5173
VITE_POST_LOGOUT_REDIRECT_URI=http://localhost:5173

# üóÑÔ∏è COSMOS DB CONFIGURATION
# ==========================================
# FOR LOCAL DEVELOPMENT: Use Cosmos DB Emulator (recommended)
# These default values work with the Azure Cosmos DB Emulator - no changes needed

# Cosmos DB Emulator endpoint (default)
VITE_COSMOS_DB_ENDPOINT=https://localhost:8081

# Cosmos DB Emulator master key (default - this key is public and safe for local dev)
VITE_COSMOS_DB_KEY=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==

# Local database name
VITE_COSMOS_DB_NAME=cato-dashboard-local

# üåê API ENDPOINTS CONFIGURATION
# ==========================================
# For local development, these can point to localhost or mock APIs
# Update the client ID in the scope URLs to match your VITE_AZURE_CLIENT_ID

# IL2 (Impact Level 2) API configuration
VITE_IL2_API_ENDPOINT=http://localhost:3001/api
VITE_IL2_API_SCOPE=api://your-azure-client-id-here/access_as_user

# IL5 (Impact Level 5) API configuration  
VITE_IL5_API_ENDPOINT=http://localhost:3001/api
VITE_IL5_API_SCOPE=api://your-azure-client-id-here/access_as_user

# üìä ENVIRONMENT Variables for Migration Script
# ==========================================
# These are used by the npm run migrate-data script
# Should match the VITE_ versions above

AZURE_COSMOS_ENDPOINT=https://localhost:8081
AZURE_COSMOS_KEY=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==
AZURE_COSMOS_DATABASE_NAME=cato-dashboard-local

# üì• AZURE DATA IMPORT CONFIGURATION (Optional)
# ==========================================
# Configure these to import data from your existing Azure environment
# The export script (npm run export-azure-data --all) will help you generate these values

# MULTI-SUBSCRIPTION EXPORT EXAMPLE:
# Run: npm run export-azure-data --all
# This will scan ALL your Azure subscriptions and generate the optimal configuration below

# Primary subscription for import (auto-selected by export script)
# AZURE_SOURCE_SUBSCRIPTION_ID=12345678-90ab-cdef-1234-567890abcdef

# Primary resource group (auto-selected if CosmosDB available)
# AZURE_SOURCE_RESOURCE_GROUP=your-resource-group-name

# CosmosDB connection details (auto-filled if available)
# AZURE_SOURCE_COSMOS_ENDPOINT=https://your-cosmos-account.documents.azure.com:443/
# AZURE_SOURCE_COSMOS_KEY=your-cosmos-primary-key
# AZURE_SOURCE_COSMOS_DATABASE=your-database-name

# Tenant information (auto-filled)
# AZURE_SOURCE_TENANT_ID=your-tenant-id

# üí° TIP: Use these export options:
# npm run export-azure-data --all                           # All subscriptions  
# npm run export-azure-data                                 # Current subscription only
# npm run export-azure-data --subscription="subscription-name"  # Specific subscription

# üîß ALTERNATIVE: AZURE COSMOS DB (instead of local emulator)
# ==========================================
# If you prefer to use a real Azure Cosmos DB for local development:
# Uncomment and configure these lines, then comment out the emulator settings above

# VITE_COSMOS_DB_ENDPOINT=https://your-cosmos-account.documents.azure.com:443/
# VITE_COSMOS_DB_KEY=your-actual-cosmos-primary-key
# VITE_COSMOS_DB_NAME=cato-dashboard-dev
# AZURE_COSMOS_ENDPOINT=https://your-cosmos-account.documents.azure.com:443/
# AZURE_COSMOS_KEY=your-actual-cosmos-primary-key
# AZURE_COSMOS_DATABASE_NAME=cato-dashboard-dev

# üöÄ QUICK SETUP CHECKLIST
# ==========================================
# FOR LOCAL AUTH MODE (Easy Testing):
# 1. Set VITE_USE_LOCAL_AUTH=true above
# 2. Leave Cosmos DB settings as-is if using the emulator  
# 3. Save this file as .env.local (remove the .example extension)
# 4. Run: npm run migrate-data
# 5. Run: npm run dev
# 6. Use test accounts: admin/admin123, security/security123, etc.

# FOR AZURE ENTRA ID MODE (Production-like):
# 1. Set VITE_USE_LOCAL_AUTH=false above
# 2. Replace "your-azure-client-id-here" with your actual client ID (in 3 places)
# 3. Replace "your-tenant-id-here" with your actual tenant ID (in 1 place)  
# 4. Leave Cosmos DB settings as-is if using the emulator
# 5. Save this file as .env.local (remove the .example extension)
# 6. Set up Azure Entra ID app registration (see LOCAL_DEVELOPMENT.md)
# 7. Run: npm run migrate-data
# 8. Run: npm run dev

# FOR IMPORTING EXISTING AZURE DATA:
# 1. Uncomment and fill in the AZURE_SOURCE_* variables above
# 2. Run: npm run import-azure-data (imports from your existing Azure environment)
# 3. Run: npm run dev

# ‚ö†Ô∏è  SECURITY NOTICE
# ==========================================
# - Never commit your .env.local file to version control
# - The Cosmos DB emulator key above is public and only for local development
# - In production, use Azure Managed Identity instead of connection strings
# - Local auth mode is for development only - never use in production
# - Always use HTTPS and proper authentication in production environments
